# Production Docker Compose for MCP Ecosystem
# Industrial-grade deployment with monitoring and security

services:
  mcp-server:
    build:
      context: ..
      dockerfile: docker/Dockerfile.production
    container_name: mcp-server-prod
    restart: unless-stopped
    ports:
      - '${MCP_PORT:-3000}:3000'
    environment:
      - NODE_ENV=production
      - MCP_PROTOCOL_VERSION=2025-06-18
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - METRICS_ENABLED=true
      - SECURITY_ENABLED=true
    networks:
      - mcp-network
    healthcheck:
      test: ['CMD-SHELL', 'wget -q --spider http://localhost:3000/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    resources:
      limits:
        memory: 512M
        cpus: '1.0'
      reservations:
        memory: 256M
        cpus: '0.5'
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/cache
    volumes:
      - mcp-logs:/app/logs

  # Performance monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: mcp-prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - mcp-network

  # Log aggregation
  loki:
    image: grafana/loki:2.9.0
    container_name: mcp-loki
    restart: unless-stopped
    ports:
      - '3100:3100'
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - mcp-network
    volumes:
      - loki-data:/loki

  # Visualization dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: mcp-grafana
    restart: unless-stopped
    ports:
      - '3001:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-mcppassword}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - mcp-network

networks:
  mcp-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: mcp-bridge

volumes:
  mcp-logs:
    driver: local
  prometheus-data:
    driver: local
  loki-data:
    driver: local
  grafana-data:
    driver: local
