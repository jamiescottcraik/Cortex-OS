# Nginx configuration for A2A Protocol Server
# Load balancing and SSL termination

events {
    worker_connections 1024;
}

http {
    upstream a2a_backend {
        server a2a-server:3000;
        # Add more servers for load balancing
        # server a2a-server-2:3000;
        # server a2a-server-3:3000;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=a2a_limit:10m rate=10r/s;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;

    # Gzip compression
    gzip on;
    gzip_types text/plain application/json application/javascript text/css;

    server {
        listen 80;
        server_name a2a.local localhost;

        # Security
        limit_req zone=a2a_limit burst=20 nodelay;

        # Health check endpoint
        location /health {
            proxy_pass http://a2a_backend/health;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_cache_bypass 1;
            proxy_no_cache 1;
        }

        # A2A JSON-RPC endpoint
        location / {
            # CORS headers
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "POST, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }

            proxy_pass http://a2a_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Metrics endpoint (if enabled)
        location /metrics {
            proxy_pass http://a2a_backend/metrics;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }

    # SSL configuration (uncomment and configure for production)
    # server {
    #     listen 443 ssl http2;
    #     server_name a2a.local;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #
    #     location / {
    #         proxy_pass http://a2a_backend;
    #         # ... same proxy configuration as above
    #     }
    # }
}
