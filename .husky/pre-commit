#!/usr/bin/env bash
. "$(dirname "$0")/common.sh"
set -euo pipefail

EXPECTED_NODE_VERSION="20"
CURRENT_NODE_VERSION=$(node --version | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$CURRENT_NODE_VERSION" != "$EXPECTED_NODE_VERSION" ]; then
  echo "Warning: Node.js version mismatch"
  echo "Expected: Node.js $EXPECTED_NODE_VERSION.x"
  echo "Current: Node.js $CURRENT_NODE_VERSION.x"
fi

echo "üîê Checking for secrets..."
if ! gitleaks detect --source . --config .gitleaks.toml --no-git; then
  echo "‚ùå gitleaks detected potential secrets or encountered an error."
  echo "Please review the gitleaks output above, remove any secrets from your code, or check your .gitleaks.toml configuration."
  echo "If you believe this is a false positive, consult the project documentation for guidance."
  exit 1
fi

echo "Running lint-staged..."
pnpm lint-staged

echo "Running ast-grep checks..."
pnpm lint:ast-grep:check

echo "Running ripgrep checks..."
pnpm lint:ripgrep:all

echo "Running Biome on staged files..."
pnpm biome:staged

echo "Running TypeScript type checking..."
pnpm typecheck

echo "Validating contracts..."
pnpm run validate:contracts

echo "Running Cortex validation..."
pnpm run cortex:validate

echo "Running Python checks..."
(cd python && uv run ruff check . && uv run pyright)

echo "Checking for large files..."
large_files=$(git diff --cached --name-only | while read -r f; do
  [ -f "$f" ] || continue
  size=$(wc -c < "$f" | tr -d ' ')
  if [ "$size" -gt 1048576 ]; then echo "$f"; fi
done)
if [ -n "$large_files" ]; then
  echo "‚ùå Large files detected (>1MB):"
  echo "$large_files"
  exit 1
fi

echo "Running markdownlint on staged markdown files..."
md_files=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.md$' || true)
if [ -n "$md_files" ]; then
  tmp_list=$(mktemp)
  echo '# markdownlint-cli2 configuration input' > "$tmp_list"
  for f in $md_files; do
    [ -f "$f" ] && echo "$f" >> "$tmp_list"
  done
  markdownlint-cli2 --config .markdownlint-cli2.yaml "@$tmp_list"
  rm -f "$tmp_list"
else
  echo "No staged markdown files to lint."
fi

echo "Running unit tests..."
pnpm test:unit

echo "‚úÖ All pre-commit checks passed!"
