# Cortex CLI consolidated environment template
# NOTE: No secret values included. Populate locally or via CI/CD secrets.

# sources: scripts/config/.env.1password
ANTHROPIC_API_KEY=

ANTHROPIC_AUTH_TOKEN=2ce7785dc2934a8f8ae655e5081ddfc9.0CVSY0x14zKh9cXN

# sources: .env.cortex.template
API_KEY=

# sources: .env.cortex.template
API_URL=

# sources: .env.cortex.template
AUTH_TOKEN=

# sources: .env.cortex.template
BACKUP_DIR=

# sources: .env.local
BROWSER_USE_API_KEY=

# sources: .env.cortex.template
CACHE_DIR=

# sources: .env.carbon
CARBON_INTENSITY=

# sources: .env.carbon
CARBON_MEASUREMENT_INTERVAL=

# sources: .env.carbon
CARBON_MONITORING_ENABLED=

# sources: .env.carbon
CARBON_TARGET_PER_BUILD=

# sources: docs/examples/codex-cli/.env.example
CODEX_API_KEY=

# sources: docs/examples/codex-cli/.env.example
CODEX_DRY_RUN=

# sources: docs/examples/codex-cli/.env.example
CODEX_MAX_COST_USD=

# sources: docs/examples/codex-cli/.env.example
CODEX_MAX_TOKENS=

# sources: .env.template
CORTEX_CIPHER_URL=

# sources: docs/examples/codex-cli/.env.example, docs/examples/gemini-cli/.env.example
CORTEX_EXPERIMENTAL=

# sources: .env.cortex.template
CORTEX_MEMORIES_PATH=

# sources: .env.cortex.template, .env.example, scripts/config/.env.1password
DATABASE_URL=

# sources: .env.cortex.template
DB_HOST=

# sources: .env.cortex.template
DB_NAME=

# sources: .env.cortex.template
DB_PASSWORD=

# sources: .env.cortex.template
DB_PORT=

# sources: .env.cortex.template
DB_USER=

# sources: .env.example
DIRECT_URL=

# sources: docs/examples/gemini-cli/.env.example
GEMINI_API_KEY=AIzaSyDYONB1PLGsZmlQjJ1dwzm_rcT-5pP7Wtw

# sources: docs/examples/gemini-cli/.env.example
GEMINI_DRY_RUN=

# sources: docs/examples/gemini-cli/.env.example
GEMINI_MAX_COST_USD=

# sources: docs/examples/gemini-cli/.env.example
GEMINI_MAX_TOKENS=

# sources: scripts/config/.env.1password
GITHUB_TOKEN=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

# sources: .env.cortex.template
GRAPHITI_GRAPH_PATH=

# sources: .env.cortex.template
GRAPHITI_INDEX_PATH=

# sources: .env.template
HF_HOME=

# sources: .env.template
HF_HUB_CACHE=

# sources: .env.template
HUGGINGFACE_HUB_CACHE=

HUGGINGFACE_TOKEN=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

# sources: .env.cortex.template
JWT_SECRET=

# sources: .env.cortex.template
LETTA_CONTEXT_PATH=

# sources: .env.cortex.template
LETTA_MEMORY_PATH=

# sources: .env, scripts/.env
LINEAR_TOKEN=

# sources: .env.cortex.template, scripts/config/.env.1password
LOG_LEVEL=

# sources: .env.cortex.template
LOG_PATH=

# sources: .env.cortex.template
MEM0_CACHE_PATH=

# sources: .env.cortex.template
MEM0_STORAGE_PATH=

# sources: .env.cortex.template
MEMORY_INTEGRATION=

# sources: .env.cortex.template
MEMORY_LIMIT=

# sources: .env.cortex.template
MEMORY_MONITORING=

# sources: .env.template
MLX_CACHE_DIR=/Volumes/ExternalSSD/huggingface_cache

# sources: .env.cortex.template
MLX_CONCURRENCY=3

# sources: .env.cortex.template
MLX_MANAGER_ENDPOINT=http://localhost:8765

# sources: .env.template
MLX_MODELS_DIR=/Volumes/ExternalSSD/ai-models

# sources: .env.cortex.template
MLX_PYTHON_SERVICE=

# sources: .env.cortex.template
MLX_SERVICE_URL=

# sources: .env.example
NEXT_PUBLIC_SUPABASE_ANON_KEY=

# sources: .env.example
NEXT_PUBLIC_SUPABASE_URL=

# sources: .env.cortex.template, scripts/config/.env.1password
NODE_ENV=

# sources: .env.template
OLLAMA_MODELS=

OPENROUTER_API_KEY=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

# sources: .env.template
OMP_NUM_THREADS=

# sources: scripts/config/.env.1password
OPENAI_API_KEY=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

# sources: .env.carbon
OTEL_ENDPOINT=

# sources: .env.cortex.template
PORT=

# sources: scripts/config/.env.1password
PYTHON_ENV=

# sources: .env.template
PYTORCH_ENABLE_MPS_FALLBACK=

# sources: scripts/config/.env.1password
REDIS_URL=

# sources: .env.carbon
SCAPHANDRE_ENDPOINT=

# sources: .env.cortex.template
SESSION_SECRET=

# sources: scripts/config/.env.1password
SONAR_HOST_URL=

# sources: scripts/config/.env.1password
SONAR_TOKEN=

# sources: .env.example
SUPABASE_ANON_KEY=

# sources: .env.example
SUPABASE_SERVICE_ROLE_KEY=

# sources: .env.example
SUPABASE_URL=

# sources: .env.cortex.template
TEMP_DIR=

# sources: .env.cortex.template
UPLOAD_DIR=

# sources: scripts/config/.env.1password
VERTEX_AI_LOCATION=

# sources: scripts/config/.env.1password
VERTEX_AI_PROJECT_ID=


# --- Chat gateway (OpenAI-compatible) ---
# Provider selector for chat streaming backend.
# Supported values: 'openai' (real OpenAI), 'compatible' (OpenAI-compatible backends like Ollama/OpenRouter/Mistral/Groq), or leave empty to use local echo fallback.
MODEL_API_PROVIDER=

# Base URL for the OpenAI-compatible API when MODEL_API_PROVIDER is set (e.g., http://localhost:11434 for local providers, or https://api.openai.com)
MODEL_API_BASE=

# API key for the provider (optional for some local providers)
MODEL_API_KEY=
