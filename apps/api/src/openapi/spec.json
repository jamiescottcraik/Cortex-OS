{
  "openapi": "3.0.3",
  "info": {
    "title": "brAInwav Cortex-OS API",
    "version": "0.0.1",
    "description": "HTTP surface for the Cortex-OS API service."
  },
  "components": {
    "schemas": {
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "string", "example": "ok" },
          "timestamp": { "type": "string", "format": "date-time" }
        },
        "required": ["status", "timestamp"]
      },
      "TaskItem": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "title": { "type": "string" },
          "status": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "title", "status", "createdAt"]
      },
      "TasksResponse": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/TaskItem" }
          }
        },
        "required": ["tasks"]
      },
      "AgentSummary": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "status": { "type": "string", "enum": ["idle", "running", "error"] },
          "lastRunAt": { "type": "string", "format": "date-time", "nullable": true }
        },
        "required": ["id", "name", "status"]
      },
      "AgentsResponse": {
        "type": "object",
        "properties": {
          "agents": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AgentSummary" }
          }
        },
        "required": ["agents"]
      },
      "MetricsResponse": {
        "type": "object",
        "properties": {
          "uptimeSeconds": { "type": "number" },
          "activeAgents": { "type": "number" },
          "tasksProcessed": { "type": "number" },
          "queueDepth": { "type": "number" }
        },
        "required": ["uptimeSeconds", "activeAgents", "tasksProcessed", "queueDepth"]
      },
      "AuthUser": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "name": { "type": "string", "nullable": true },
          "emailVerified": { "type": "boolean" },
          "image": { "type": "string", "nullable": true },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "email", "emailVerified", "createdAt", "updatedAt"]
      },
      "AuthUserResponse": {
        "type": "object",
        "properties": {
          "user": { "$ref": "#/components/schemas/AuthUser" }
        },
        "required": ["user"]
      },
      "AuthUserUpdateRequest": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "nullable": true },
          "image": { "type": ["string", "null"], "nullable": true }
        },
        "additionalProperties": false
      },
      "AuthSession": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "userId": { "type": "string" },
          "expires": { "type": "string", "format": "date-time" },
          "createdAt": { "type": "string", "format": "date-time" },
          "userAgent": { "type": "string", "nullable": true },
          "current": { "type": "boolean" }
        },
        "required": ["id", "userId", "expires", "createdAt", "current"]
      },
      "AuthSessionsResponse": {
        "type": "object",
        "properties": {
          "sessions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AuthSession" }
          }
        },
        "required": ["sessions"]
      },
      "TwoFactorVerifyRequest": {
        "type": "object",
        "properties": {
          "code": { "type": "string", "minLength": 1 }
        },
        "required": ["code"]
      },
      "PasskeyRegisterResponse": {
        "type": "object",
        "properties": {
          "challenge": { "type": "string" },
          "rp": {
            "type": "object",
            "properties": {
              "name": { "type": "string" },
              "id": { "type": "string" }
            },
            "required": ["name", "id"]
          },
          "user": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "name": { "type": "string" },
              "displayName": { "type": "string", "nullable": true }
            },
            "required": ["id", "name"]
          }
        },
        "required": ["challenge", "rp", "user"]
      },
      "PasskeyAuthenticateResponse": {
        "type": "object",
        "properties": {
          "challenge": { "type": "string" }
        },
        "required": ["challenge"]
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "success": { "type": "boolean", "nullable": true }
        },
        "required": ["message"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": { "type": "string" }
        },
        "required": ["error"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "paths": {
    "/health": {
      "get": {
        "summary": "API service health check",
        "responses": {
          "200": {
            "description": "Service is reachable",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HealthResponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks": {
      "get": {
        "summary": "List recent Cortex-OS tasks",
        "responses": {
          "200": {
            "description": "Tasks fetched successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/TasksResponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/agents": {
      "get": {
        "summary": "List available agents and status",
        "responses": {
          "200": {
            "description": "Agents fetched successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AgentsResponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/metrics": {
      "get": {
        "summary": "Retrieve operational metrics",
        "responses": {
          "200": {
            "description": "Metrics fetched successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MetricsResponse" }
              }
            }
          }
        }
      }
    },
    "/api/me": {
      "get": {
        "summary": "Retrieve the authenticated user profile",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Authenticated user profile",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthUserResponse" }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update the authenticated user profile",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AuthUserUpdateRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated user profile",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthUserResponse" }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/sessions": {
      "get": {
        "summary": "List sessions for the authenticated user",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Sessions fetched successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AuthSessionsResponse" }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/sessions/{sessionId}": {
      "delete": {
        "summary": "Revoke a session by identifier",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Session revoked successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MessageResponse" }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "404": {
            "description": "Session not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/2fa/enable": {
      "post": {
        "summary": "Initiate two-factor authentication setup",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Two-factor initiation message",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MessageResponse" }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/2fa/verify": {
      "post": {
        "summary": "Verify a two-factor authentication code",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/TwoFactorVerifyRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification response message",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MessageResponse" }
              }
            }
          },
          "400": {
            "description": "Missing verification code",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/passkeys/register": {
      "post": {
        "summary": "Begin WebAuthn/passkey registration",
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "WebAuthn registration payload",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PasskeyRegisterResponse" }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/passkeys/authenticate": {
      "post": {
        "summary": "Begin WebAuthn/passkey authentication",
        "responses": {
          "200": {
            "description": "WebAuthn authentication payload",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PasskeyAuthenticateResponse" }
              }
            }
          }
        }
      }
    }
  }
}
