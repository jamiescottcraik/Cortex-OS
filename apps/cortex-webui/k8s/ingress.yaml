apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cortex-webui-ingress
  namespace: cortex-webui
  labels:
    app.kubernetes.io/name: cortex-webui
    app.kubernetes.io/component: ingress
    app.kubernetes.io/part-of: cortex-os
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - cortex-webui.example.com  # Replace with your domain
    secretName: cortex-webui-tls
  rules:
  - host: cortex-webui.example.com  # Replace with your domain
    http:
      paths:
      # API routes go to backend
      - path: /api/(.*)
        pathType: Prefix
        backend:
          service:
            name: cortex-webui-backend-service
            port:
              number: 3001
      # WebSocket routes go to backend
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: cortex-webui-backend-service
            port:
              number: 3001
      # Everything else goes to frontend
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: cortex-webui-frontend-service
            port:
              number: 3000