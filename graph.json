{
  "graph": {
    "nodes": {
      "@cortex-os/a2a-schema-registry": {
        "name": "@cortex-os/a2a-schema-registry",
        "type": "lib",
        "data": {
          "root": "packages/a2a-services/schema-registry",
          "name": "@cortex-os/a2a-schema-registry",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/a2a-schema-registry",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "options": {
                "configFile": "packages/a2a-services/schema-registry/vitest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/a2a-services/schema-registry/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@cortex-os/cortex-structure-github": {
        "name": "@cortex-os/cortex-structure-github",
        "type": "lib",
        "data": {
          "root": "packages/cortex-structure-github",
          "name": "@cortex-os/cortex-structure-github",
          "tags": [
            "npm:public",
            "npm:github-app",
            "npm:repository-structure",
            "npm:code-organization",
            "npm:file-management",
            "npm:architecture-enforcement"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "build",
                "start",
                "test",
                "lint",
                "format",
                "test:safe"
              ]
            },
            "description": "Production-ready repository structure analysis and enforcement GitHub App with automated violation detection and smart recommendations",
            "js": {
              "packageName": "@cortex-os/cortex-structure-github",
              "packageMain": "dist/server/start.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsx src/server/start.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node dist/server/start.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint src",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "format": {
              "executor": "nx:run-script",
              "options": {
                "script": "format"
              },
              "metadata": {
                "scriptContent": "prettier --write src",
                "runCommand": "pnpm run format"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/evidence": {
        "name": "@cortex-os/evidence",
        "type": "lib",
        "data": {
          "root": "apps/cortex-os/packages/evidence",
          "name": "@cortex-os/evidence",
          "tags": [
            "npm:private",
            "npm:cortex-os",
            "npm:evidence",
            "npm:analytics",
            "npm:validation"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "test",
                "test:watch",
                "lint",
                "typecheck",
                "test:safe"
              ]
            },
            "description": "Evidence collection and analysis feature package for Cortex-OS",
            "js": {
              "packageName": "@cortex-os/evidence",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "node ../../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint .",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/planner": {
        "name": "@cortex-os/planner",
        "type": "lib",
        "data": {
          "root": "apps/cortex-os/packages/planner",
          "name": "@cortex-os/planner",
          "tags": [
            "npm:private",
            "npm:cortex-os",
            "npm:planner",
            "npm:orchestration",
            "npm:task-management"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "test",
                "test:watch",
                "lint",
                "typecheck",
                "test:safe"
              ]
            },
            "description": "Task planning and orchestration feature package for Cortex-OS",
            "js": {
              "packageName": "@cortex-os/planner",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "node ../../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint .",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/service-model-gateway": {
        "name": "@cortex-os/service-model-gateway",
        "type": "lib",
        "data": {
          "root": "packages/services/model-gateway",
          "name": "@cortex-os/service-model-gateway",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "start",
                "test",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/service-model-gateway",
              "packageMain": "dist/server.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsx src/server.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node dist/server.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/service-orchestration": {
        "name": "@cortex-os/service-orchestration",
        "type": "lib",
        "data": {
          "root": "packages/services/orchestration",
          "name": "@cortex-os/service-orchestration",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "test",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/service-orchestration",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/a2a-observability": {
        "name": "@cortex-os/a2a-observability",
        "type": "lib",
        "data": {
          "root": "packages/a2a/a2a-observability",
          "name": "@cortex-os/a2a-observability",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "typecheck",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/a2a-observability",
              "packageExports": {
                ".": {
                  "import": "./dist/index.js",
                  "types": "./dist/index.d.ts"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm build",
                "cwd": "packages/a2a/a2a-observability"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "packages/a2a/a2a-observability/src/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "options": {
                "cwd": "packages/a2a/a2a-observability",
                "reportsDirectory": "../../../../.vitest/a2a-observability"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            }
          },
          "$schema": "https://raw.githubusercontent.com/nrwl/nx/main/packages/nx/schemas/project-schema.json",
          "projectType": "library",
          "sourceRoot": "packages/a2a/a2a-observability/src",
          "implicitDependencies": []
        }
      },
      "@cortex-os/cortex-semgrep-github": {
        "name": "@cortex-os/cortex-semgrep-github",
        "type": "lib",
        "data": {
          "root": "packages/cortex-semgrep-github",
          "name": "@cortex-os/cortex-semgrep-github",
          "tags": [
            "npm:public",
            "npm:semgrep",
            "npm:security",
            "npm:github",
            "npm:automation",
            "npm:cortex",
            "npm:static-analysis"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "start",
                "test",
                "lint",
                "format",
                "test:safe"
              ]
            },
            "description": "Production-ready Semgrep security scanning GitHub App with comprehensive vulnerability detection and automated reporting",
            "js": {
              "packageName": "@cortex-os/cortex-semgrep-github",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsx watch src/server/start.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node dist/server/start.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint src --ext .ts",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "format": {
              "executor": "nx:run-script",
              "options": {
                "script": "format"
              },
              "metadata": {
                "scriptContent": "prettier --write src",
                "runCommand": "pnpm run format"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/ingest": {
        "name": "@cortex-os/ingest",
        "type": "lib",
        "data": {
          "root": "apps/cortex-os/packages/ingest",
          "name": "@cortex-os/ingest",
          "tags": [
            "npm:private",
            "npm:cortex-os",
            "npm:ingest",
            "npm:data-processing",
            "npm:pipeline"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "test",
                "test:watch",
                "lint",
                "typecheck",
                "test:safe"
              ]
            },
            "description": "Data ingestion and processing feature package for Cortex-OS",
            "js": {
              "packageName": "@cortex-os/ingest",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "node ../../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint .",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/a11y-utils": {
        "name": "@cortex-os/a11y-utils",
        "type": "lib",
        "data": {
          "root": "libs/typescript/accessibility",
          "name": "@cortex-os/a11y-utils",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "start",
                "dev"
              ]
            },
            "description": "Cortex-OS Accessibility Utilities for WCAG 2.2 AA Compliance",
            "js": {
              "packageName": "@cortex-os/a11y-utils",
              "packageMain": "src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node dist/index.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "ts-node src/index.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/a2a-common": {
        "name": "@cortex-os/a2a-common",
        "type": "lib",
        "data": {
          "root": "packages/a2a-services/common",
          "name": "@cortex-os/a2a-common",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "test",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/a2a-common",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/asbr-schemas": {
        "name": "@cortex-os/asbr-schemas",
        "type": "lib",
        "data": {
          "root": "libs/typescript/asbr-schemas",
          "name": "@cortex-os/asbr-schemas",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "lint",
                "typecheck",
                "test"
              ]
            },
            "js": {
              "packageName": "@cortex-os/asbr-schemas",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint .",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "vitest run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/asbr-policy": {
        "name": "@cortex-os/asbr-policy",
        "type": "lib",
        "data": {
          "root": "libs/typescript/asbr-policy",
          "name": "@cortex-os/asbr-policy",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "typecheck",
                "test"
              ]
            },
            "js": {
              "packageName": "@cortex-os/asbr-policy",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "vitest run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "libs/typescript/asbr-policy/src/**/*.ts",
                  "libs/typescript/asbr-policy/tests/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/typescript/asbr-policy/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@cortex-os/mcp-marketplace": {
        "name": "@cortex-os/mcp-marketplace",
        "type": "lib",
        "data": {
          "root": "apps/cortex-marketplace-api",
          "name": "@cortex-os/mcp-marketplace",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "test",
                "lint",
                "format",
                "test:safe"
              ]
            },
            "description": "Central MCP Marketplace for server discovery and installation",
            "js": {
              "packageName": "@cortex-os/mcp-marketplace",
              "packageExports": {
                ".": "./dist/index.js",
                "./registry": "./dist/registry.js",
                "./install": "./dist/install.js"
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint src/",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "format": {
              "executor": "nx:run-script",
              "options": {
                "script": "format"
              },
              "metadata": {
                "scriptContent": "prettier --write src/",
                "runCommand": "pnpm run format"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/a2a-contracts": {
        "name": "@cortex-os/a2a-contracts",
        "type": "lib",
        "data": {
          "root": "packages/a2a/a2a-contracts",
          "name": "@cortex-os/a2a-contracts",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "test",
                "typecheck",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/a2a-contracts",
              "packageExports": {
                ".": {
                  "import": "./dist/index.js",
                  "types": "./dist/index.d.ts"
                },
                "./envelope": {
                  "import": "./dist/envelope.js",
                  "types": "./dist/envelope.d.ts"
                },
                "./envelope.js": {
                  "import": "./dist/envelope.js",
                  "types": "./dist/envelope.d.ts"
                },
                "./events": {
                  "import": "./dist/events.js",
                  "types": "./dist/events.d.ts"
                },
                "./commands": {
                  "import": "./dist/commands.js",
                  "types": "./dist/commands.d.ts"
                },
                "./trace-context": {
                  "import": "./dist/trace-context.js",
                  "types": "./dist/trace-context.d.ts"
                },
                "./trace-context.js": {
                  "import": "./dist/trace-context.js",
                  "types": "./dist/trace-context.d.ts"
                },
                "./agents": {
                  "import": "./dist/agents.js",
                  "types": "./dist/agents.d.ts"
                },
                "./schema-registry-types": {
                  "import": "./dist/schema-registry-types.js",
                  "types": "./dist/schema-registry-types.d.ts"
                },
                "./topic-acl": {
                  "import": "./dist/topic-acl.js",
                  "types": "./dist/topic-acl.d.ts"
                },
                "./topic-acl.js": {
                  "import": "./dist/topic-acl.js",
                  "types": "./dist/topic-acl.d.ts"
                },
                "./outbox-types": {
                  "import": "./dist/outbox-types.js",
                  "types": "./dist/outbox-types.d.ts"
                },
                "./schema-validation-utils": {
                  "import": "./dist/schema-validation-utils.js",
                  "types": "./dist/schema-validation-utils.d.ts"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsup src/**/*.ts --dts --format esm",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/a2a-transport": {
        "name": "@cortex-os/a2a-transport",
        "type": "lib",
        "data": {
          "root": "packages/a2a/a2a-transport",
          "name": "@cortex-os/a2a-transport",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "test",
                "typecheck",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/a2a-transport",
              "packageExports": {
                ".": {
                  "import": "./dist/index.js",
                  "types": "./dist/index.d.ts"
                },
                "./inproc": {
                  "import": "./dist/inproc.js",
                  "types": "./dist/inproc.d.ts"
                },
                "./fsq": {
                  "import": "./dist/fsq.js",
                  "types": "./dist/fsq.d.ts"
                },
                "./stdio": {
                  "import": "./dist/stdio.js",
                  "types": "./dist/stdio.d.ts"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsup src/index.ts src/fsq.ts src/inproc.ts src/stdio.ts --dts --format esm",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "cortex-webui-frontend": {
        "name": "cortex-webui-frontend",
        "type": "lib",
        "data": {
          "root": "apps/cortex-webui/frontend",
          "name": "cortex-webui-frontend",
          "tags": [
            "npm:public",
            "npm:ai",
            "npm:chat",
            "npm:webui",
            "npm:cortex",
            "npm:frontend"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "build",
                "serve",
                "test",
                "lint",
                "preview",
                "test:safe"
              ]
            },
            "description": "Frontend for Cortex WebUI - A modern interface for AI models",
            "js": {
              "packageName": "cortex-webui-frontend",
              "packageMain": "src/index.tsx",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "vite",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "vite build",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "serve": {
              "executor": "nx:run-script",
              "options": {
                "script": "serve"
              },
              "metadata": {
                "scriptContent": "vite preview",
                "runCommand": "pnpm run serve"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint \"src/**/*.{ts,tsx}\" --report-unused-disable-directives --max-warnings 0",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "preview": {
              "executor": "nx:run-script",
              "options": {
                "script": "preview"
              },
              "metadata": {
                "scriptContent": "vite preview",
                "runCommand": "pnpm run preview"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/a2a-handlers": {
        "name": "@cortex-os/a2a-handlers",
        "type": "lib",
        "data": {
          "root": "packages/a2a/a2a-handlers",
          "name": "@cortex-os/a2a-handlers",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "typecheck",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/a2a-handlers",
              "packageExports": {
                ".": {
                  "import": "./dist/index.js",
                  "types": "./dist/index.d.ts"
                },
                "./health.handler": {
                  "import": "./dist/health.handler.js",
                  "types": "./dist/health.handler.d.ts"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm build",
                "cwd": "packages/a2a/a2a-handlers"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "packages/a2a/a2a-handlers/src/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "options": {
                "configFile": "packages/a2a/a2a-handlers/vitest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/a2a/a2a-handlers/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@cortex-os/contracts": {
        "name": "@cortex-os/contracts",
        "type": "lib",
        "data": {
          "root": "libs/typescript/contracts",
          "name": "@cortex-os/contracts",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "typecheck",
                "test"
              ]
            },
            "js": {
              "packageName": "@cortex-os/contracts",
              "packageExports": {
                ".": {
                  "import": "./dist/src/index.js",
                  "types": "./dist/src/index.d.ts"
                },
                "./evidence": {
                  "import": "./dist/src/evidence.js",
                  "types": "./dist/src/evidence.d.ts"
                }
              },
              "packageMain": "dist/src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json && node scripts/fix-dts-extensions.mjs",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "vitest run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "libs/typescript/contracts/src/**/*.ts",
                  "libs/typescript/contracts/tests/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/typescript/contracts/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@cortex-os/cortex-ai-github": {
        "name": "@cortex-os/cortex-ai-github",
        "type": "lib",
        "data": {
          "root": "packages/cortex-ai-github",
          "name": "@cortex-os/cortex-ai-github",
          "tags": [
            "npm:public",
            "npm:ai",
            "npm:github",
            "npm:automation",
            "npm:cortex",
            "npm:code-review"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "start",
                "test",
                "lint",
                "format",
                "test:safe"
              ]
            },
            "description": "Production-ready AI-powered GitHub automation with MLX integration, security-hardened and functionally architected",
            "js": {
              "packageName": "@cortex-os/cortex-ai-github",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsx watch src/server/start.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node dist/server/start.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint src --ext .ts",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "format": {
              "executor": "nx:run-script",
              "options": {
                "script": "format"
              },
              "metadata": {
                "scriptContent": "prettier --write src",
                "runCommand": "pnpm run format"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/telemetry": {
        "name": "@cortex-os/telemetry",
        "type": "lib",
        "data": {
          "root": "libs/typescript/telemetry",
          "name": "@cortex-os/telemetry",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "prepublishOnly",
                "typecheck"
              ]
            },
            "js": {
              "packageName": "@cortex-os/telemetry",
              "packageExports": {
                ".": {
                  "import": "./dist/index.js",
                  "types": "./dist/index.d.ts"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "prepublishOnly": {
              "executor": "nx:run-script",
              "options": {
                "script": "prepublishOnly"
              },
              "metadata": {
                "scriptContent": "pnpm build",
                "runCommand": "pnpm run prepublishOnly"
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "libs/typescript/telemetry/src/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "configFile": "libs/typescript/telemetry/vitest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "coverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/typescript/telemetry/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "cortex-webui-backend": {
        "name": "cortex-webui-backend",
        "type": "lib",
        "data": {
          "root": "apps/cortex-webui/backend",
          "name": "cortex-webui-backend",
          "tags": [
            "npm:public",
            "npm:ai",
            "npm:api",
            "npm:backend",
            "npm:cortex",
            "npm:express"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "build",
                "start",
                "test",
                "lint",
                "test:safe"
              ]
            },
            "description": "Backend for Cortex WebUI - API server for AI models",
            "js": {
              "packageName": "cortex-webui-backend",
              "packageMain": "src/server.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "ts-node -r dotenv/config src/server.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node -r dotenv/config dist/backend/src/server.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint \"src/**/*.ts\" --report-unused-disable-directives --max-warnings 0",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/logging": {
        "name": "@cortex-os/logging",
        "type": "lib",
        "data": {
          "root": "packages/cortex-logging",
          "name": "@cortex-os/logging",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "test",
                "test:watch",
                "clean",
                "test:safe"
              ]
            },
            "description": "Structured logging library for Cortex-OS",
            "js": {
              "packageName": "@cortex-os/logging",
              "packageExports": {
                ".": {
                  "import": "./dist/index.js",
                  "types": "./dist/index.d.ts"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "echo 'DISABLED: watch/UI mode blocked for memory safety'",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "clean": {
              "executor": "nx:run-script",
              "options": {
                "script": "clean"
              },
              "metadata": {
                "scriptContent": "rm -rf dist",
                "runCommand": "pnpm run clean"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/marketplace-api": {
        "name": "@cortex-os/marketplace-api",
        "type": "lib",
        "data": {
          "root": "apps/cortex-marketplace",
          "name": "@cortex-os/marketplace-api",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "start",
                "test",
                "typecheck",
                "lint",
                "clean",
                "test:safe"
              ]
            },
            "description": "MCP Marketplace API Server",
            "js": {
              "packageName": "@cortex-os/marketplace-api",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsx watch src/index.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node dist/index.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint src/**/*.ts",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "clean": {
              "executor": "nx:run-script",
              "options": {
                "script": "clean"
              },
              "metadata": {
                "scriptContent": "rm -rf dist",
                "runCommand": "pnpm run clean"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/mvp-server": {
        "name": "@cortex-os/mvp-server",
        "type": "lib",
        "data": {
          "root": "packages/mvp/mvp-server",
          "name": "@cortex-os/mvp-server",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "build",
                "lint",
                "test",
                "start",
                "check:node",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/mvp-server",
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsx watch src/index.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint .",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node --enable-source-maps ./dist/index.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "check:node": {
              "executor": "nx:run-script",
              "options": {
                "script": "check:node"
              },
              "metadata": {
                "scriptContent": "node -e \"const v=process.versions.node.split('.')[0]; if(+v>22||+v<18) process.exit(1)\" && echo OK",
                "runCommand": "pnpm run check:node"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "a2a-events": {
        "name": "a2a-events",
        "type": "lib",
        "data": {
          "root": "packages/a2a/a2a-events",
          "name": "a2a-events",
          "tags": [
            "npm:public",
            "npm:a2a",
            "npm:events",
            "npm:schema",
            "npm:cortex-os",
            "npm:event-driven",
            "scope:a2a",
            "type:lib"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "test:safe"
              ]
            },
            "description": "A2A event schemas and definitions for Cortex-OS",
            "js": {
              "packageName": "@cortex-os/a2a-events",
              "packageMain": "./dist/index.mjs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/js:swc",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/packages/a2a/a2a-events",
                "main": "packages/a2a/a2a-events/src/index.ts",
                "tsConfig": "packages/a2a/a2a-events/tsconfig.lib.json",
                "assets": []
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "packages/a2a/a2a-events/src/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "configFile": "packages/a2a/a2a-events/vitest.config.ts",
                "passWithNoTests": true,
                "cwd": "packages/a2a/a2a-events"
              },
              "configurations": {
                "ci": {
                  "coverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/a2a/a2a-events/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@cortex-os/agent-toolkit": {
        "name": "@cortex-os/agent-toolkit",
        "type": "lib",
        "data": {
          "root": "packages/agent-toolkit",
          "name": "@cortex-os/agent-toolkit",
          "tags": [
            "npm:public",
            "npm:agent-toolkit",
            "npm:code-search",
            "npm:code-transformation",
            "npm:validation",
            "npm:mcp",
            "npm:cortex-os"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "test",
                "test:coverage",
                "lint",
                "clean",
                "test:safe"
              ]
            },
            "description": "Agent-friendly toolkit for code search, transformation, and validation",
            "js": {
              "packageName": "@cortex-os/agent-toolkit",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "vitest --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint src/**/*.ts",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "clean": {
              "executor": "nx:run-script",
              "options": {
                "script": "clean"
              },
              "metadata": {
                "scriptContent": "rm -rf dist",
                "runCommand": "pnpm run clean"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/model-gateway": {
        "name": "@cortex-os/model-gateway",
        "type": "lib",
        "data": {
          "root": "packages/model-gateway",
          "name": "@cortex-os/model-gateway",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "prestart",
                "start",
                "typecheck",
                "test",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/model-gateway",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsx src/server.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "prestart": {
              "executor": "nx:run-script",
              "options": {
                "script": "prestart"
              },
              "metadata": {
                "scriptContent": "pnpm run build",
                "runCommand": "pnpm run prestart"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node dist/server.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run -c vitest.config.ts",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/mvp-group": {
        "name": "@cortex-os/mvp-group",
        "type": "lib",
        "data": {
          "root": "packages/mvp/mvp-group",
          "name": "@cortex-os/mvp-group",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "test",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/mvp-group",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsup src/index.ts --dts --format esm --clean",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/observability": {
        "name": "@cortex-os/observability",
        "type": "lib",
        "data": {
          "root": "packages/observability",
          "name": "@cortex-os/observability",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "test",
                "lint",
                "typecheck",
                "test:safe"
              ]
            },
            "description": "OTEL spans, metrics, logs with ULID propagation for Cortex-OS",
            "js": {
              "packageName": "@cortex-os/observability",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js"
                },
                "./tracing": {
                  "types": "./dist/tracing/index.d.ts",
                  "import": "./dist/tracing/index.js"
                },
                "./metrics": {
                  "types": "./dist/metrics/index.d.ts",
                  "import": "./dist/metrics/index.js"
                },
                "./logging": {
                  "types": "./dist/logging/index.d.ts",
                  "import": "./dist/logging/index.js"
                },
                "./flamegraph": {
                  "types": "./dist/flamegraph.d.ts",
                  "import": "./dist/flamegraph.js"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint .",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/orchestration": {
        "name": "@cortex-os/orchestration",
        "type": "lib",
        "data": {
          "root": "packages/orchestration",
          "name": "@cortex-os/orchestration",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "pretest",
                "dev",
                "build",
                "lint",
                "test",
                "typecheck",
                "test:coverage",
                "replay",
                "approve",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/orchestration",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "pretest": {
              "executor": "nx:run-script",
              "options": {
                "script": "pretest"
              },
              "metadata": {
                "scriptContent": "pnpm build",
                "runCommand": "pnpm run pretest"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "echo \"No build step required for this package\"",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint src --ext .ts",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "vitest --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "replay": {
              "executor": "nx:run-script",
              "options": {
                "script": "replay"
              },
              "metadata": {
                "scriptContent": "tsx src/cli/replay.ts",
                "runCommand": "pnpm run replay"
              },
              "configurations": {},
              "parallelism": true
            },
            "approve": {
              "executor": "nx:run-script",
              "options": {
                "script": "approve"
              },
              "metadata": {
                "scriptContent": "tsx src/cli/approve.ts",
                "runCommand": "pnpm run approve"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/orchestration/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@cortex-os/a2a-core": {
        "name": "@cortex-os/a2a-core",
        "type": "lib",
        "data": {
          "root": "packages/a2a/a2a-core",
          "name": "@cortex-os/a2a-core",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "test",
                "typecheck",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/a2a-core",
              "packageExports": {
                ".": {
                  "import": "./dist/index.js",
                  "types": "./dist/index.d.ts"
                },
                "./bus": {
                  "import": "./dist/bus.js",
                  "types": "./dist/bus.d.ts"
                },
                "./send": {
                  "import": "./dist/send.js",
                  "types": "./dist/send.d.ts"
                },
                "./schema-registry": {
                  "import": "./dist/schema-registry.js",
                  "types": "./dist/schema-registry.d.ts"
                },
                "./trace-context-manager": {
                  "import": "./dist/trace-context-manager.js",
                  "types": "./dist/trace-context-manager.d.ts"
                },
                "./transport": {
                  "import": "./dist/transport.js",
                  "types": "./dist/transport.d.ts"
                },
                "./dlq": {
                  "import": "./dist/dlq.js",
                  "types": "./dist/dlq.d.ts"
                },
                "./outbox": {
                  "import": "./dist/outbox.js",
                  "types": "./dist/outbox.d.ts"
                },
                "./router": {
                  "import": "./dist/router.js",
                  "types": "./dist/router.d.ts"
                },
                "./saga": {
                  "import": "./dist/saga.js",
                  "types": "./dist/saga.d.ts"
                },
                "./idempotency": {
                  "import": "./dist/idempotency.js",
                  "types": "./dist/idempotency.d.ts"
                },
                "./metrics": {
                  "import": "./dist/metrics.js",
                  "types": "./dist/metrics.d.ts"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsup",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/a2a-services": {
        "name": "@cortex-os/a2a-services",
        "type": "app",
        "data": {
          "root": "packages/a2a-services",
          "name": "@cortex-os/a2a-services",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build"
              ]
            },
            "js": {
              "packageName": "@cortex-os/a2a-services",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "echo 'Building workspaces...' && pnpm --filter @cortex-os/a2a-common build && pnpm --filter @cortex-os/a2a-schema-registry build",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/cortex-rules": {
        "name": "@cortex-os/cortex-rules",
        "type": "lib",
        "data": {
          "root": "packages/cortex-rules",
          "name": "@cortex-os/cortex-rules",
          "tags": [
            "npm:public",
            "npm:cortex-os",
            "npm:ai",
            "npm:agents",
            "npm:rules"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "test",
                "test:watch",
                "build:python",
                "test:python"
              ]
            },
            "description": "Cortex-OS rules and utilities for AI agents",
            "js": {
              "packageName": "@cortex-os/cortex-rules",
              "packageExports": {
                ".": {
                  "import": "./dist/index.mjs",
                  "require": "./dist/index.js",
                  "types": "./dist/index.d.ts"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsup src/index.ts --format cjs,esm --dts",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsup src/index.ts --format cjs,esm --dts --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "vitest run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "vitest",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "build:python": {
              "executor": "nx:run-script",
              "options": {
                "script": "build:python"
              },
              "metadata": {
                "scriptContent": "python -m build",
                "runCommand": "pnpm run build:python"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:python": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:python"
              },
              "metadata": {
                "scriptContent": "python -m pytest",
                "runCommand": "pnpm run test:python"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/mcp-registry": {
        "name": "@cortex-os/mcp-registry",
        "type": "lib",
        "data": {
          "root": "packages/mcp-registry",
          "name": "@cortex-os/mcp-registry",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "typecheck",
                "test",
                "test:coverage",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/mcp-registry",
              "packageExports": {
                ".": {
                  "import": "./dist/index.js",
                  "types": "./dist/index.d.ts"
                },
                "./fs-store": {
                  "import": "./dist/fs-store.js",
                  "types": "./dist/fs-store.d.ts"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/mvp-core": {
        "name": "@cortex-os/mvp-core",
        "type": "lib",
        "data": {
          "root": "packages/mvp/mvp-core",
          "name": "@cortex-os/mvp-core",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "build",
                "lint",
                "test",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/mvp-core",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsx watch src/index.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsup src/index.ts --dts --format esm --clean",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint .",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/types": {
        "name": "@cortex-os/types",
        "type": "lib",
        "data": {
          "root": "libs/typescript/types",
          "name": "@cortex-os/types",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "typecheck",
                "test"
              ]
            },
            "js": {
              "packageName": "@cortex-os/types",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "vitest run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "libs/typescript/types/src/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/typescript/types/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@cortex-os/utils": {
        "name": "@cortex-os/utils",
        "type": "lib",
        "data": {
          "root": "libs/typescript/utils",
          "name": "@cortex-os/utils",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "typecheck",
                "test"
              ]
            },
            "js": {
              "packageName": "@cortex-os/utils",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "require": "./dist/index.js"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "vitest run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "libs/typescript/utils/src/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "libs/typescript/utils/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@cortex-os/lib": {
        "name": "@cortex-os/lib",
        "type": "lib",
        "data": {
          "root": "libs/typescript/lib",
          "name": "@cortex-os/lib",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "clean"
              ]
            },
            "js": {
              "packageName": "@cortex-os/lib",
              "packageMain": "dist/src/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "clean": {
              "executor": "nx:run-script",
              "options": {
                "script": "clean"
              },
              "metadata": {
                "scriptContent": "rm -rf dist",
                "runCommand": "pnpm run clean"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/mcp-bridge": {
        "name": "@cortex-os/mcp-bridge",
        "type": "lib",
        "data": {
          "root": "packages/mcp-bridge",
          "name": "@cortex-os/mcp-bridge",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "typecheck",
                "test",
                "test:watch",
                "test:coverage",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/mcp-bridge",
              "packageExports": {
                ".": {
                  "import": "./dist/index.js",
                  "types": "./dist/index.d.ts"
                },
                "./stdio-http": {
                  "import": "./dist/stdio-http.js",
                  "types": "./dist/stdio-http.d.ts"
                },
                "./rate-limiter": {
                  "import": "./dist/rate-limiter.js",
                  "types": "./dist/rate-limiter.d.ts"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "echo 'DISABLED: watch/UI mode blocked for memory safety'",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/prp-runner": {
        "name": "@cortex-os/prp-runner",
        "type": "lib",
        "data": {
          "root": "packages/prp-runner",
          "name": "@cortex-os/prp-runner",
          "tags": [
            "npm:public",
            "npm:ai",
            "npm:orchestration",
            "npm:neural",
            "npm:prp",
            "npm:cortex",
            "npm:production"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "test",
                "test:memory:profile",
                "test:watch",
                "test:coverage",
                "test:ci",
                "tdd:red",
                "tdd:green",
                "tdd:refactor",
                "gates:tdd",
                "lint",
                "clean",
                "precommit",
                "demo:semsearch",
                "demo:mcp",
                "test:safe"
              ]
            },
            "description": "Production-grade PRP Neural Orchestration Engine",
            "js": {
              "packageName": "@cortex-os/prp-runner",
              "packageExports": {
                ".": "./dist/index.js",
                "./orchestrator": "./dist/orchestrator.js",
                "./neurons": "./dist/neurons/index.js",
                "./tools": "./dist/tools/index.js",
                "./validation": "./dist/validation/index.js"
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "NODE_OPTIONS='--expose-gc --max-old-space-size=1536' vitest run --pool=forks --no-file-parallelism --max-workers=1 --pool-options.forks.singleFork=true --pool-options.forks.maxForks=1",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:memory:profile": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:memory:profile"
              },
              "metadata": {
                "scriptContent": "NODE_OPTIONS='--expose-gc --max-old-space-size=1536' vitest run tests/memory/**/*.test.ts --pool=forks --no-file-parallelism --max-workers=1 --pool-options.forks.singleFork=true --pool-options.forks.maxForks=1",
                "runCommand": "pnpm run test:memory:profile"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "echo 'DISABLED: watch/UI mode blocked for memory safety'",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "vitest --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:ci": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:ci"
              },
              "metadata": {
                "scriptContent": "NODE_OPTIONS='--expose-gc --max-old-space-size=1536' vitest run --coverage --reporter=verbose --pool=forks --no-file-parallelism --max-workers=1 --pool-options.forks.singleFork=true --pool-options.forks.maxForks=1",
                "runCommand": "pnpm run test:ci"
              },
              "configurations": {},
              "parallelism": true
            },
            "tdd:red": {
              "executor": "nx:run-script",
              "options": {
                "script": "tdd:red"
              },
              "metadata": {
                "scriptContent": "echo 'DISABLED: watch/UI mode blocked for memory safety'",
                "runCommand": "pnpm run tdd:red"
              },
              "configurations": {},
              "parallelism": true
            },
            "tdd:green": {
              "executor": "nx:run-script",
              "options": {
                "script": "tdd:green"
              },
              "metadata": {
                "scriptContent": "echo 'TDD Phase 2: Make test pass' && vitest run",
                "runCommand": "pnpm run tdd:green"
              },
              "configurations": {},
              "parallelism": true
            },
            "tdd:refactor": {
              "executor": "nx:run-script",
              "options": {
                "script": "tdd:refactor"
              },
              "metadata": {
                "scriptContent": "echo 'DISABLED: watch/UI mode blocked for memory safety'",
                "runCommand": "pnpm run tdd:refactor"
              },
              "configurations": {},
              "parallelism": true
            },
            "gates:tdd": {
              "executor": "nx:run-script",
              "options": {
                "script": "gates:tdd"
              },
              "metadata": {
                "scriptContent": "NODE_OPTIONS='--expose-gc --max-old-space-size=1536' vitest run --coverage --reporter=dot --pool=forks --no-file-parallelism --max-workers=1 --pool-options.forks.singleFork=true --pool-options.forks.maxForks=1 && echo 'TDD gates passed: All tests pass with 85%+ coverage'",
                "runCommand": "pnpm run gates:tdd"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint src/**/*.ts",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "clean": {
              "executor": "nx:run-script",
              "options": {
                "script": "clean"
              },
              "metadata": {
                "scriptContent": "rm -rf dist",
                "runCommand": "pnpm run clean"
              },
              "configurations": {},
              "parallelism": true
            },
            "precommit": {
              "executor": "nx:run-script",
              "options": {
                "script": "precommit"
              },
              "metadata": {
                "scriptContent": "pnpm gates:tdd && pnpm lint",
                "runCommand": "pnpm run precommit"
              },
              "configurations": {},
              "parallelism": true
            },
            "demo:semsearch": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm -C packages/prp-runner demo:semsearch"
              },
              "configurations": {},
              "parallelism": true
            },
            "demo:mcp": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm -C packages/prp-runner demo:mcp"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "NODE_OPTIONS='--expose-gc --max-old-space-size=1536' vitest run --pool=forks --no-file-parallelism --max-workers=1 --pool-options.forks.singleFork=true --pool-options.forks.maxForks=1",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "cortex-sec": {
        "name": "cortex-sec",
        "type": "app",
        "data": {
          "root": "packages/cortex-sec",
          "name": "cortex-sec",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@cortex-os/cortex-sec",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "security": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npx cortex-sec scan --sarif reports/security.sarif --json reports/security.json"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/tdd-coach": {
        "name": "@cortex-os/tdd-coach",
        "type": "lib",
        "data": {
          "root": "packages/tdd-coach",
          "name": "@cortex-os/tdd-coach",
          "tags": [
            "npm:public",
            "npm:tdd",
            "npm:test-driven-development",
            "npm:coaching",
            "npm:ai-tools",
            "npm:development-workflow"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "test",
                "test:coverage",
                "lint",
                "clean",
                "test:safe"
              ]
            },
            "description": "Universal TDD coaching system for developers and AI models",
            "js": {
              "packageName": "@cortex-os/tdd-coach",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc --build",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc --build --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "vitest --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint src --ext .ts",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "clean": {
              "executor": "nx:run-script",
              "options": {
                "script": "clean"
              },
              "metadata": {
                "scriptContent": "rm -rf dist",
                "runCommand": "pnpm run clean"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@apps/cortex-webui": {
        "name": "@apps/cortex-webui",
        "type": "app",
        "data": {
          "root": "apps/cortex-webui",
          "name": "@apps/cortex-webui",
          "tags": [
            "npm:private",
            "npm:ai",
            "npm:chat",
            "npm:webui",
            "npm:cortex",
            "npm:monorepo"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "test",
                "dev",
                "build",
                "lint",
                "start",
                "clean",
                "test:safe"
              ]
            },
            "description": "A modern web interface for AI models with real-time chat capabilities",
            "js": {
              "packageName": "@apps/cortex-webui",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "vitest -c vitest.config.ts",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "concurrently \"pnpm --filter cortex-webui-backend run dev\" \"pnpm --filter cortex-webui-frontend run dev\"",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "pnpm --filter cortex-webui-backend run build && pnpm --filter cortex-webui-frontend run build",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "pnpm --filter cortex-webui-backend run lint && pnpm --filter cortex-webui-frontend run lint",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "pnpm --filter cortex-webui-backend run start",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "clean": {
              "executor": "nx:run-script",
              "options": {
                "script": "clean"
              },
              "metadata": {
                "scriptContent": "rimraf frontend/dist backend/dist",
                "runCommand": "pnpm run clean"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/commands": {
        "name": "@cortex-os/commands",
        "type": "lib",
        "data": {
          "root": "packages/commands",
          "name": "@cortex-os/commands",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "test",
                "test:coverage",
                "lint"
              ]
            },
            "description": "Slash command loader/parser/runner for Cortex-OS",
            "js": {
              "packageName": "@cortex-os/commands",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc -w -p tsconfig.json",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "vitest run --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint src/**/*.ts",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/commands/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@cortex-os/mcp-core": {
        "name": "@cortex-os/mcp-core",
        "type": "lib",
        "data": {
          "root": "packages/mcp-core",
          "name": "@cortex-os/mcp-core",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "typecheck",
                "test",
                "test:watch",
                "test:coverage",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/mcp-core",
              "packageExports": {
                ".": {
                  "import": "./dist/index.js",
                  "types": "./dist/index.d.ts"
                },
                "./client": {
                  "import": "./dist/client.js",
                  "types": "./dist/client.d.ts"
                },
                "./contracts": {
                  "import": "./dist/contracts.js",
                  "types": "./dist/contracts.d.ts"
                },
                "./testing": {
                  "import": "./dist/testing/index.js",
                  "types": "./dist/testing/index.d.ts"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "echo 'DISABLED: watch/UI mode blocked for memory safety'",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/memories": {
        "name": "@cortex-os/memories",
        "type": "lib",
        "data": {
          "root": "packages/memories",
          "name": "@cortex-os/memories",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "build",
                "test",
                "typecheck",
                "prisma:gen",
                "db:migrate",
                "test:coverage",
                "jsonl:import",
                "test:safe",
                "migration",
                "migration:status",
                "migration:up",
                "migration:rollback",
                "migration:history",
                "migration:validate",
                "monitor:health",
                "monitor:metrics",
                "monitor:dashboard",
                "monitor:storage",
                "monitor:stress",
                "monitor"
              ]
            },
            "js": {
              "packageName": "@cortex-os/memories",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "prisma:gen": {
              "executor": "nx:run-script",
              "options": {
                "script": "prisma:gen"
              },
              "metadata": {
                "scriptContent": "prisma generate --schema=./prisma/schema.prisma",
                "runCommand": "pnpm run prisma:gen"
              },
              "configurations": {},
              "parallelism": true
            },
            "db:migrate": {
              "executor": "nx:run-script",
              "options": {
                "script": "db:migrate"
              },
              "metadata": {
                "scriptContent": "prisma migrate deploy --schema=./prisma/schema.prisma",
                "runCommand": "pnpm run db:migrate"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "vitest --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "jsonl:import": {
              "executor": "nx:run-script",
              "options": {
                "script": "jsonl:import"
              },
              "metadata": {
                "scriptContent": "tsx src/tools/jsonl-to-memory.ts",
                "runCommand": "pnpm run jsonl:import"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "migration": {
              "executor": "nx:run-script",
              "options": {
                "script": "migration"
              },
              "metadata": {
                "scriptContent": "tsx src/tools/migration-cli.ts",
                "runCommand": "pnpm run migration"
              },
              "configurations": {},
              "parallelism": true
            },
            "migration:status": {
              "executor": "nx:run-script",
              "options": {
                "script": "migration:status"
              },
              "metadata": {
                "scriptContent": "tsx src/tools/migration-cli.ts status",
                "runCommand": "pnpm run migration:status"
              },
              "configurations": {},
              "parallelism": true
            },
            "migration:up": {
              "executor": "nx:run-script",
              "options": {
                "script": "migration:up"
              },
              "metadata": {
                "scriptContent": "tsx src/tools/migration-cli.ts migrate",
                "runCommand": "pnpm run migration:up"
              },
              "configurations": {},
              "parallelism": true
            },
            "migration:rollback": {
              "executor": "nx:run-script",
              "options": {
                "script": "migration:rollback"
              },
              "metadata": {
                "scriptContent": "tsx src/tools/migration-cli.ts rollback",
                "runCommand": "pnpm run migration:rollback"
              },
              "configurations": {},
              "parallelism": true
            },
            "migration:history": {
              "executor": "nx:run-script",
              "options": {
                "script": "migration:history"
              },
              "metadata": {
                "scriptContent": "tsx src/tools/migration-cli.ts history",
                "runCommand": "pnpm run migration:history"
              },
              "configurations": {},
              "parallelism": true
            },
            "migration:validate": {
              "executor": "nx:run-script",
              "options": {
                "script": "migration:validate"
              },
              "metadata": {
                "scriptContent": "tsx src/tools/migration-cli.ts validate",
                "runCommand": "pnpm run migration:validate"
              },
              "configurations": {},
              "parallelism": true
            },
            "monitor:health": {
              "executor": "nx:run-script",
              "options": {
                "script": "monitor:health"
              },
              "metadata": {
                "scriptContent": "tsx src/monitoring/cli.ts health",
                "runCommand": "pnpm run monitor:health"
              },
              "configurations": {},
              "parallelism": true
            },
            "monitor:metrics": {
              "executor": "nx:run-script",
              "options": {
                "script": "monitor:metrics"
              },
              "metadata": {
                "scriptContent": "tsx src/monitoring/cli.ts metrics",
                "runCommand": "pnpm run monitor:metrics"
              },
              "configurations": {},
              "parallelism": true
            },
            "monitor:dashboard": {
              "executor": "nx:run-script",
              "options": {
                "script": "monitor:dashboard"
              },
              "metadata": {
                "scriptContent": "tsx src/monitoring/cli.ts dashboard",
                "runCommand": "pnpm run monitor:dashboard"
              },
              "configurations": {},
              "parallelism": true
            },
            "monitor:storage": {
              "executor": "nx:run-script",
              "options": {
                "script": "monitor:storage"
              },
              "metadata": {
                "scriptContent": "tsx src/monitoring/cli.ts storage",
                "runCommand": "pnpm run monitor:storage"
              },
              "configurations": {},
              "parallelism": true
            },
            "monitor:stress": {
              "executor": "nx:run-script",
              "options": {
                "script": "monitor:stress"
              },
              "metadata": {
                "scriptContent": "tsx src/monitoring/cli.ts stress",
                "runCommand": "pnpm run monitor:stress"
              },
              "configurations": {},
              "parallelism": true
            },
            "monitor": {
              "executor": "nx:run-script",
              "options": {
                "script": "monitor"
              },
              "metadata": {
                "scriptContent": "tsx src/monitoring/cli.ts",
                "runCommand": "pnpm run monitor"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "packages/memories/src/**/*.ts",
                  "packages/memories/tests/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/memories/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@cortex-os/registry": {
        "name": "@cortex-os/registry",
        "type": "lib",
        "data": {
          "root": "packages/registry",
          "name": "@cortex-os/registry",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "start",
                "dev",
                "test",
                "test:coverage",
                "test:watch",
                "lint",
                "format",
                "test:safe"
              ]
            },
            "description": "Schema registry service for Cortex-OS contracts",
            "js": {
              "packageName": "@cortex-os/registry",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node dist/index.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsx src/index.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run --coverage --coverage.threshold.lines 95",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint src/**/*.ts",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "format": {
              "executor": "nx:run-script",
              "options": {
                "script": "format"
              },
              "metadata": {
                "scriptContent": "prettier --write src/**/*.ts",
                "runCommand": "pnpm run format"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "security": {
        "name": "security",
        "type": "lib",
        "data": {
          "root": "packages/security",
          "name": "security",
          "tags": [
            "npm:public",
            "npm:security",
            "npm:spiffe",
            "npm:spire",
            "npm:mtls",
            "npm:workload-identity",
            "npm:zero-trust",
            "scope:security",
            "type:shared"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "test:watch",
                "test:coverage",
                "semgrep",
                "test:safe"
              ]
            },
            "description": "SPIFFE/SPIRE security implementation for Cortex-OS with mTLS and workload identity management",
            "js": {
              "packageName": "@cortex-os/security",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js"
                },
                "./spiffe": {
                  "types": "./dist/spiffe/index.d.ts",
                  "import": "./dist/spiffe/index.js"
                },
                "./mtls": {
                  "types": "./dist/mtls/index.d.ts",
                  "import": "./dist/mtls/index.js"
                },
                "./workload-identity": {
                  "types": "./dist/workload-identity/index.d.ts",
                  "import": "./dist/workload-identity/index.js"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsup src/index.ts src/spiffe/index.ts src/mtls/index.ts src/workload-identity/index.ts --dts --format esm --clean --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "semgrep": {
              "executor": "nx:run-script",
              "options": {
                "script": "semgrep"
              },
              "metadata": {
                "scriptContent": "semgrep scan --config=semgrep.yml --severity=WARNING --sarif -o semgrep.sarif .",
                "runCommand": "pnpm run semgrep"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{projectRoot}/dist"
              ],
              "options": {
                "main": "packages/security/src/index.ts",
                "tsConfig": "packages/security/tsconfig.json",
                "outputPath": "dist/packages/security",
                "assets": [],
                "external": [
                  "@cortex-os/a2a-contracts",
                  "@cortex-os/utils",
                  "@cortex-os/telemetry"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "packages/security/src/**/*.ts",
                  "packages/security/test/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "options": {
                "configFile": "packages/security/vitest.config.mjs"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            }
          },
          "$schema": "https://raw.githubusercontent.com/nrwl/nx/master/packages/nx/schemas/project-schema.json",
          "sourceRoot": "packages/security/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@cortex-os/cortex-code": {
        "name": "@cortex-os/cortex-code",
        "type": "app",
        "data": {
          "root": "apps/cortex-code",
          "name": "@cortex-os/cortex-code",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "projectType": "application",
          "sourceRoot": "apps/cortex-code",
          "targets": {
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm codex:test",
                "cwd": "apps/cortex-code"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test-unit": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm codex:test:unit",
                "cwd": "apps/cortex-code"
              },
              "configurations": {},
              "parallelism": true
            },
            "test-integration": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm codex:test:integration",
                "cwd": "apps/cortex-code"
              },
              "configurations": {},
              "parallelism": true
            },
            "coverage": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm codex:test:coverage",
                "cwd": "apps/cortex-code"
              },
              "configurations": {},
              "parallelism": true
            },
            "upstream:diff": {
              "executor": "nx:run-commands",
              "options": {
                "command": "bash",
                "args": [
                  "scripts/upstream-diff.sh"
                ],
                "cwd": "apps/cortex-code"
              },
              "configurations": {},
              "parallelism": true
            },
            "upstream:status": {
              "executor": "nx:run-commands",
              "options": {
                "command": "bash",
                "args": [
                  "scripts/upstream-status.sh"
                ],
                "cwd": "apps/cortex-code"
              },
              "configurations": {},
              "parallelism": true
            },
            "upstream:pull": {
              "executor": "nx:run-commands",
              "options": {
                "command": "bash",
                "args": [
                  "scripts/codex-rs-subtree.sh",
                  "pull"
                ],
                "cwd": "apps/cortex-code"
              },
              "configurations": {},
              "parallelism": true
            },
            "sync:dry": {
              "executor": "nx:run-commands",
              "options": {
                "command": "bash",
                "args": [
                  "scripts/sync-cortex-code.sh"
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "sync:run": {
              "executor": "nx:run-commands",
              "options": {
                "command": "bash",
                "args": [
                  "scripts/sync-cortex-code.sh",
                  "--run"
                ]
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm build",
                "cwd": "apps/cortex-code"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "lint": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm lint",
                "cwd": "apps/cortex-code"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            }
          },
          "implicitDependencies": [],
          "tags": []
        }
      },
      "@cortex-os/gateway": {
        "name": "@cortex-os/gateway",
        "type": "lib",
        "data": {
          "root": "packages/gateway",
          "name": "@cortex-os/gateway",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "build",
                "typecheck",
                "lint",
                "test",
                "test:coverage",
                "start",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/gateway",
              "packageMain": "src/server.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsx src/server.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json && node ./scripts/build-openapi.cjs",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint .",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ./scripts/build-openapi.cjs && vitest run --config ./vitest.config.ts",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "node ./scripts/build-openapi.cjs && vitest run --coverage --config ./vitest.config.ts",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node dist/server.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "mvp": {
        "name": "mvp",
        "type": "lib",
        "data": {
          "root": "packages/mvp/mvp",
          "name": "mvp",
          "tags": [
            "npm:private",
            "scope:mvp",
            "type:feature"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "test:watch",
                "test:coverage",
                "test:ci",
                "gates:determinism",
                "clean",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/mvp",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "echo 'DISABLED: watch/UI mode blocked for memory safety'",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "vitest --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:ci": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:ci"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run --coverage --reporter=verbose",
                "runCommand": "pnpm run test:ci"
              },
              "configurations": {},
              "parallelism": true
            },
            "gates:determinism": {
              "executor": "nx:run-script",
              "options": {
                "script": "gates:determinism"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run tests/determinism.test.ts --reporter=dot",
                "runCommand": "pnpm run gates:determinism"
              },
              "configurations": {},
              "parallelism": true
            },
            "clean": {
              "executor": "nx:run-script",
              "options": {
                "script": "clean"
              },
              "metadata": {
                "scriptContent": "rm -rf dist",
                "runCommand": "pnpm run clean"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/packages/mvp",
                "tsConfig": "packages/mvp/mvp/tsconfig.json",
                "project": "packages/mvp/mvp/package.json",
                "entryFile": "packages/mvp/mvp/src/index.ts",
                "external": [
                  "rxjs/operators",
                  "rxjs/websocket",
                  "rxjs/ajax"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "packages/mvp/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "configFile": "packages/mvp/vitest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "coverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            }
          },
          "$schema": "https://raw.githubusercontent.com/nrwl/nx/master/packages/nx/schemas/project-schema.json",
          "projectType": "library",
          "sourceRoot": "packages/mvp/mvp/src",
          "namedInputs": {
            "default": [
              "{projectRoot}/**/*",
              "sharedGlobals"
            ],
            "production": [
              "default",
              "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
              "!{projectRoot}/tsconfig.spec.json",
              "!{projectRoot}/src/test-setup.[jt]s",
              "!{projectRoot}/test-setup.[jt]s"
            ]
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/agents": {
        "name": "@cortex-os/agents",
        "type": "app",
        "data": {
          "root": "packages/agents",
          "name": "@cortex-os/agents",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "build",
                "start",
                "test",
                "test:watch",
                "test:integration",
                "test:tdd",
                "test:coverage",
                "health:check",
                "observability:export",
                "lint",
                "lint:fix",
                "typecheck"
              ]
            },
            "description": "brAInwav Cortex-OS Native Agent System",
            "js": {
              "packageName": "@cortex-os/agents",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsx watch --env-file=.env ./src/server.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node dist/server.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "vitest",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "vitest --watch",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:integration": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:integration"
              },
              "metadata": {
                "scriptContent": "vitest tests/integration",
                "runCommand": "pnpm run test:integration"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:tdd": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:tdd"
              },
              "metadata": {
                "scriptContent": "vitest tests/integration/tdd-plan-implementation.test.ts",
                "runCommand": "pnpm run test:tdd"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "vitest --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "health:check": {
              "executor": "nx:run-script",
              "options": {
                "script": "health:check"
              },
              "metadata": {
                "scriptContent": "node -e \"import('./dist/lib/health-check.js').then(h => h.healthMonitor.getHealthStatus().then(s => console.log('brAInwav Health:', s)))\"",
                "runCommand": "pnpm run health:check"
              },
              "configurations": {},
              "parallelism": true
            },
            "observability:export": {
              "executor": "nx:run-script",
              "options": {
                "script": "observability:export"
              },
              "metadata": {
                "scriptContent": "node -e \"import('./dist/lib/observability.js').then(o => console.log('brAInwav Observability:', o.observability.export()))\"",
                "runCommand": "pnpm run observability:export"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "biome check ./src",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "lint:fix": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint:fix"
              },
              "metadata": {
                "scriptContent": "biome check --write ./src",
                "runCommand": "pnpm run lint:fix"
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/kernel": {
        "name": "@cortex-os/kernel",
        "type": "lib",
        "data": {
          "root": "packages/kernel",
          "name": "@cortex-os/kernel",
          "tags": [
            "npm:public",
            "npm:cortex-os",
            "npm:kernel",
            "npm:langgraph",
            "npm:deterministic",
            "npm:mcp",
            "npm:prp"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "test",
                "test:watch",
                "test:coverage",
                "test:ci",
                "gates:determinism",
                "lint",
                "clean",
                "test:safe"
              ]
            },
            "description": "Deterministic kernel for Cortex-OS with LangGraph state management",
            "js": {
              "packageName": "@cortex-os/kernel",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "require": "./dist/index.js"
                },
                "./kernel": {
                  "types": "./dist/graph-simple.d.ts",
                  "import": "./dist/graph-simple.js",
                  "require": "./dist/graph-simple.js"
                },
                "./state": {
                  "types": "./dist/state.d.ts",
                  "import": "./dist/state.js",
                  "require": "./dist/state.js"
                },
                "./nodes": {
                  "types": "./dist/nodes/index.d.ts",
                  "import": "./dist/nodes/index.js",
                  "require": "./dist/nodes/index.js"
                },
                "./mcp": {
                  "types": "./dist/mcp/adapter.d.ts",
                  "import": "./dist/mcp/adapter.js",
                  "require": "./dist/mcp/adapter.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "echo 'DISABLED: watch/UI mode blocked for memory safety'",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "vitest --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:ci": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:ci"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run --coverage --reporter=verbose",
                "runCommand": "pnpm run test:ci"
              },
              "configurations": {},
              "parallelism": true
            },
            "gates:determinism": {
              "executor": "nx:run-script",
              "options": {
                "script": "gates:determinism"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run tests/determinism.test.ts --reporter=dot",
                "runCommand": "pnpm run gates:determinism"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint src/**/*.ts",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "clean": {
              "executor": "nx:run-script",
              "options": {
                "script": "clean"
              },
              "metadata": {
                "scriptContent": "rm -rf dist",
                "runCommand": "pnpm run clean"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/policy": {
        "name": "@cortex-os/policy",
        "type": "lib",
        "data": {
          "root": "packages/policy",
          "name": "@cortex-os/policy",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "pretest",
                "dev",
                "build",
                "lint",
                "test",
                "typecheck",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/policy",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "pretest": {
              "executor": "nx:run-script",
              "options": {
                "script": "pretest"
              },
              "metadata": {
                "scriptContent": "pnpm build",
                "runCommand": "pnpm run pretest"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsc --watch",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "echo \"No build step required for this package\"",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint src --ext .ts --no-ignore",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/policy/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@cortex-os/simlab": {
        "name": "@cortex-os/simlab",
        "type": "lib",
        "data": {
          "root": "packages/simlab",
          "name": "@cortex-os/simlab",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "dev",
                "simlab:smoke",
                "simlab:critical",
                "simlab:full",
                "simlab:report",
                "simlab:gates",
                "sim:status",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/simlab",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js"
                },
                "./runner": {
                  "types": "./dist/runner.d.ts",
                  "import": "./dist/runner.js"
                },
                "./agent-adapter": {
                  "types": "./dist/agent-adapter.d.ts",
                  "import": "./dist/agent-adapter.js"
                },
                "./judge": {
                  "types": "./dist/judge.d.ts",
                  "import": "./dist/judge.js"
                },
                "./report": {
                  "types": "./dist/report.d.ts",
                  "import": "./dist/report.js"
                },
                "./types": {
                  "types": "./dist/types.d.ts",
                  "import": "./dist/types.js"
                },
                "./user-sim": {
                  "types": "./dist/user-sim.d.ts",
                  "import": "./dist/user-sim.js"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsx watch src/index.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "simlab:smoke": {
              "executor": "nx:run-script",
              "options": {
                "script": "simlab:smoke"
              },
              "metadata": {
                "scriptContent": "tsx src/scripts/run-smoke.ts",
                "runCommand": "pnpm run simlab:smoke"
              },
              "configurations": {},
              "parallelism": true
            },
            "simlab:critical": {
              "executor": "nx:run-script",
              "options": {
                "script": "simlab:critical"
              },
              "metadata": {
                "scriptContent": "tsx src/scripts/run-critical.ts",
                "runCommand": "pnpm run simlab:critical"
              },
              "configurations": {},
              "parallelism": true
            },
            "simlab:full": {
              "executor": "nx:run-script",
              "options": {
                "script": "simlab:full"
              },
              "metadata": {
                "scriptContent": "tsx src/scripts/run-full.ts",
                "runCommand": "pnpm run simlab:full"
              },
              "configurations": {},
              "parallelism": true
            },
            "simlab:report": {
              "executor": "nx:run-script",
              "options": {
                "script": "simlab:report"
              },
              "metadata": {
                "scriptContent": "tsx src/scripts/generate-report.ts",
                "runCommand": "pnpm run simlab:report"
              },
              "configurations": {},
              "parallelism": true
            },
            "simlab:gates": {
              "executor": "nx:run-script",
              "options": {
                "script": "simlab:gates"
              },
              "metadata": {
                "scriptContent": "tsx src/scripts/check-gates.ts",
                "runCommand": "pnpm run simlab:gates"
              },
              "configurations": {},
              "parallelism": true
            },
            "sim:status": {
              "executor": "nx:run-script",
              "options": {
                "script": "sim:status"
              },
              "metadata": {
                "scriptContent": "tsx src/scripts/status.ts",
                "runCommand": "pnpm run sim:status"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "github": {
        "name": "github",
        "type": "lib",
        "data": {
          "root": "packages/github",
          "name": "github",
          "tags": [
            "npm:private",
            "npm:github",
            "npm:api",
            "npm:cortex-os",
            "npm:git",
            "npm:actions",
            "npm:pull-requests",
            "scope:github",
            "type:lib"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "test:safe"
              ]
            },
            "description": "GitHub API client and operations for Cortex-OS",
            "js": {
              "packageName": "@cortex-os/github",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "outputs": [
                "{projectRoot}/target"
              ],
              "options": {
                "command": "cargo build --release",
                "cwd": "packages/github"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "nx:run-commands",
              "options": {
                "command": "cargo clippy -- -D warnings",
                "cwd": "packages/github"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "command": "cargo test",
                "cwd": "packages/github"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/github/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "@cortex-os/evals": {
        "name": "@cortex-os/evals",
        "type": "lib",
        "data": {
          "root": "packages/evals",
          "name": "@cortex-os/evals",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "test",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/evals",
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "vitest -c vitest.config.ts",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@cortex-os/hooks": {
        "name": "@cortex-os/hooks",
        "type": "lib",
        "data": {
          "root": "packages/hooks",
          "name": "@cortex-os/hooks",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "build",
                "clean",
                "lint",
                "test",
                "test:coverage",
                "test:safe",
                "typecheck"
              ]
            },
            "description": "Cortex Hooks: deterministic lifecycle hooks for agents, orchestration, prp-runner, and kernel",
            "js": {
              "packageName": "@cortex-os/hooks",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "clean": {
              "executor": "nx:run-script",
              "options": {
                "script": "clean"
              },
              "metadata": {
                "scriptContent": "rm -rf dist",
                "runCommand": "pnpm run clean"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint src --ext .ts",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "vitest --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "cortex-os": {
        "name": "cortex-os",
        "type": "app",
        "data": {
          "root": "apps/cortex-os",
          "name": "cortex-os",
          "tags": [
            "npm:private",
            "scope:app",
            "type:app"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@apps/cortex-os",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsx src/index.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/apps/cortex-os",
                "tsConfig": "apps/cortex-os/tsconfig.app.json",
                "project": "apps/cortex-os/package.json",
                "entryFile": "apps/cortex-os/src/index.ts",
                "external": [
                  "rxjs/operators",
                  "rxjs/websocket",
                  "rxjs/ajax"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "serve": {
              "executor": "@nx/js:node",
              "options": {
                "buildTarget": "cortex-os:build"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm biome lint .",
                "cwd": "apps/cortex-os"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "configFile": "apps/cortex-os/vitest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "coverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "typecheck": {
              "executor": "nx:run-commands",
              "options": {
                "command": "tsc -p tsconfig.json --noEmit",
                "cwd": "apps/cortex-os"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "biome": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm biome check --write .",
                "cwd": "apps/cortex-os"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "$schema": "https://raw.githubusercontent.com/nrwl/nx/master/packages/nx/schemas/project-schema.json",
          "projectType": "application",
          "sourceRoot": "apps/cortex-os/src",
          "implicitDependencies": [
            "asbr",
            "a2a",
            "@cortex-os/memories",
            "@cortex-os/orchestration"
          ],
          "namedInputs": {
            "default": [
              "{projectRoot}/**/*",
              "sharedGlobals"
            ],
            "production": [
              "default",
              "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
              "!{projectRoot}/tsconfig.spec.json",
              "!{projectRoot}/src/test-setup.[jt]s",
              "!{projectRoot}/test-setup.[jt]s"
            ]
          }
        }
      },
      "@cortex-os/agui": {
        "name": "@cortex-os/agui",
        "type": "lib",
        "data": {
          "root": "packages/agui",
          "name": "@cortex-os/agui",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "lint",
                "test",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/agui",
              "packageMain": "src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "lint": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint"
              },
              "metadata": {
                "scriptContent": "eslint .",
                "runCommand": "pnpm run lint"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run --config ./vitest.config.ts",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "asbr": {
        "name": "asbr",
        "type": "lib",
        "data": {
          "root": "packages/asbr",
          "name": "asbr",
          "tags": [
            "npm:private",
            "npm:asbr",
            "npm:cortex-os",
            "npm:brain-only",
            "npm:orchestration",
            "npm:second-brain",
            "npm:local-first",
            "npm:a11y",
            "npm:wcag",
            "npm:mcp",
            "scope:asbr",
            "type:core"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "prepare",
                "dev",
                "start",
                "test:watch",
                "test:coverage",
                "test:perf",
                "test:a11y",
                "lint:fix",
                "clean",
                "typecheck",
                "build:fast",
                "build:prod",
                "test:safe"
              ]
            },
            "description": "Agentic Second-Brain Runtime (ASBR) - Brain-only orchestration and knowledge runtime",
            "js": {
              "packageName": "@cortex-os/asbr",
              "packageExports": {
                ".": {
                  "types": "./dist/index.d.ts",
                  "default": "./dist/index.js"
                },
                "./sdk": {
                  "types": "./dist/sdk/index.d.ts",
                  "default": "./dist/sdk/index.js"
                },
                "./api": null,
                "./types": {
                  "types": "./dist/types/index.d.ts",
                  "default": "./dist/types/index.js"
                }
              },
              "packageMain": "dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "prepare": {
              "executor": "nx:run-script",
              "options": {
                "script": "prepare"
              },
              "metadata": {
                "scriptContent": "pnpm -s build",
                "runCommand": "pnpm run prepare"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsx src/index.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node dist/index.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:watch": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:watch"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:watch"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:perf": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:perf"
              },
              "metadata": {
                "scriptContent": "PERF_METRICS=1 vitest run tests/performance --reporter=dot",
                "runCommand": "pnpm run test:perf"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:a11y": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:a11y"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run --config vitest.a11y.config.ts",
                "runCommand": "pnpm run test:a11y"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint:fix": {
              "executor": "nx:run-script",
              "options": {
                "script": "lint:fix"
              },
              "metadata": {
                "scriptContent": "eslint src --ext .ts --fix",
                "runCommand": "pnpm run lint:fix"
              },
              "configurations": {},
              "parallelism": true
            },
            "clean": {
              "executor": "nx:run-script",
              "options": {
                "script": "clean"
              },
              "metadata": {
                "scriptContent": "rm -rf dist tsconfig.tsbuildinfo",
                "runCommand": "pnpm run clean"
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc --noEmit --incremental",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "build:fast": {
              "executor": "nx:run-script",
              "options": {
                "script": "build:fast"
              },
              "metadata": {
                "scriptContent": "tsc --build --incremental --assumeChangesOnlyAffectDirectDependencies",
                "runCommand": "pnpm run build:fast"
              },
              "configurations": {},
              "parallelism": true
            },
            "build:prod": {
              "executor": "nx:run-script",
              "options": {
                "script": "build:prod"
              },
              "metadata": {
                "scriptContent": "NODE_ENV=production tsc --build --incremental",
                "runCommand": "pnpm run build:prod"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/packages/asbr",
                "tsConfig": "packages/asbr/tsconfig.lib.json",
                "project": "packages/asbr/package.json",
                "entryFile": "packages/asbr/src/index.ts",
                "external": [
                  "rxjs/operators",
                  "rxjs/websocket",
                  "rxjs/ajax"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "packages/asbr/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "configFile": "packages/asbr/vitest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "coverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            }
          },
          "$schema": "https://raw.githubusercontent.com/nrwl/nx/master/packages/nx/schemas/project-schema.json",
          "projectType": "library",
          "sourceRoot": "packages/asbr/src",
          "implicitDependencies": [],
          "namedInputs": {
            "default": [
              "{projectRoot}/**/*",
              "sharedGlobals"
            ],
            "production": [
              "default",
              "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
              "!{projectRoot}/tsconfig.spec.json",
              "!{projectRoot}/src/test-setup.[jt]s",
              "!{projectRoot}/test-setup.[jt]s"
            ]
          }
        }
      },
      "@cortex-os/rag": {
        "name": "@cortex-os/rag",
        "type": "lib",
        "data": {
          "root": "packages/rag",
          "name": "@cortex-os/rag",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "test:coverage",
                "verify:coverage",
                "verify:coverage:auto",
                "verify:coverage:dry",
                "docs:verify",
                "test:safe",
                "test:performance",
                "test:performance:memory",
                "test:performance:detailed",
                "benchmark:ingest",
                "benchmark:retrieval",
                "benchmark:all",
                "test:performance:indexing",
                "ci:bench:indexing",
                "security:scan"
              ]
            },
            "js": {
              "packageName": "@cortex-os/rag",
              "packageMain": "src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run -c vitest.config.ts --coverage --coverage.reporter=json-summary --coverage.reporter=text-summary",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "verify:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "verify:coverage"
              },
              "metadata": {
                "scriptContent": "node ./scripts/verify-coverage.mjs",
                "runCommand": "pnpm run verify:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "verify:coverage:auto": {
              "executor": "nx:run-script",
              "options": {
                "script": "verify:coverage:auto"
              },
              "metadata": {
                "scriptContent": "node ./scripts/verify-coverage.mjs --auto-raise",
                "runCommand": "pnpm run verify:coverage:auto"
              },
              "configurations": {},
              "parallelism": true
            },
            "verify:coverage:dry": {
              "executor": "nx:run-script",
              "options": {
                "script": "verify:coverage:dry"
              },
              "metadata": {
                "scriptContent": "node ./scripts/verify-coverage.mjs --auto-raise --dry-run",
                "runCommand": "pnpm run verify:coverage:dry"
              },
              "configurations": {},
              "parallelism": true
            },
            "docs:verify": {
              "executor": "nx:run-script",
              "options": {
                "script": "docs:verify"
              },
              "metadata": {
                "scriptContent": "./scripts/verify-docs.sh",
                "runCommand": "pnpm run docs:verify"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:performance": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:performance"
              },
              "metadata": {
                "scriptContent": "node benchmarks/performance-suite.js",
                "runCommand": "pnpm run test:performance"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:performance:memory": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:performance:memory"
              },
              "metadata": {
                "scriptContent": "node benchmarks/performance-suite.js --profile=memory",
                "runCommand": "pnpm run test:performance:memory"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:performance:detailed": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:performance:detailed"
              },
              "metadata": {
                "scriptContent": "node benchmarks/performance-suite.js --profile=detailed",
                "runCommand": "pnpm run test:performance:detailed"
              },
              "configurations": {},
              "parallelism": true
            },
            "benchmark:ingest": {
              "executor": "nx:run-script",
              "options": {
                "script": "benchmark:ingest"
              },
              "metadata": {
                "scriptContent": "node benchmarks/ingest.js",
                "runCommand": "pnpm run benchmark:ingest"
              },
              "configurations": {},
              "parallelism": true
            },
            "benchmark:retrieval": {
              "executor": "nx:run-script",
              "options": {
                "script": "benchmark:retrieval"
              },
              "metadata": {
                "scriptContent": "node benchmarks/retrieval.js",
                "runCommand": "pnpm run benchmark:retrieval"
              },
              "configurations": {},
              "parallelism": true
            },
            "benchmark:all": {
              "executor": "nx:run-script",
              "options": {
                "script": "benchmark:all"
              },
              "metadata": {
                "scriptContent": "npm run benchmark:ingest && npm run benchmark:retrieval && npm run test:performance",
                "runCommand": "pnpm run benchmark:all"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:performance:indexing": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:performance:indexing"
              },
              "metadata": {
                "scriptContent": "node benchmarks/indexing-bench.mjs",
                "runCommand": "pnpm run test:performance:indexing"
              },
              "configurations": {},
              "parallelism": true
            },
            "ci:bench:indexing": {
              "executor": "nx:run-script",
              "options": {
                "script": "ci:bench:indexing"
              },
              "metadata": {
                "scriptContent": "node benchmarks/indexing-bench.mjs --sizes=10000,100000 --queries=5 --ef=32,64,128 --topK=10 --report=reports/indexing-performance.json",
                "runCommand": "pnpm run ci:bench:indexing"
              },
              "configurations": {},
              "parallelism": true
            },
            "security:scan": {
              "executor": "nx:run-script",
              "options": {
                "script": "security:scan"
              },
              "metadata": {
                "scriptContent": "pnpm -w security:scan:diff || pnpm -w security:scan",
                "runCommand": "pnpm run security:scan"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "command": "node",
                "args": [
                  "scripts/vitest-safe.mjs",
                  "run",
                  "-c",
                  "packages/rag/vitest.config.ts",
                  "--reporter=dot"
                ],
                "parallel": false
              },
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "packages/rag/src/**/*.ts",
                  "packages/rag/benchmarks/**/*.mjs",
                  "packages/rag/tests/**/*.ts",
                  "packages/rag/__tests__/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "bench": {
              "executor": "nx:run-commands",
              "options": {
                "command": "node",
                "args": [
                  "packages/rag/benchmarks/indexing-bench.mjs"
                ],
                "parallel": false,
                "forwardAllArgs": true
              },
              "configurations": {},
              "parallelism": true
            },
            "bench:pq": {
              "executor": "nx:run-commands",
              "options": {
                "command": "node",
                "args": [
                  "packages/rag/benchmarks/indexing-bench.mjs",
                  "--sizes=5000",
                  "--ef=64,128",
                  "--queries=10",
                  "--topK=10",
                  "--variants=flat,pq,hnsw,hnswPQ",
                  "--minRecallPctByVariant=pq:40,hnswPQ:50",
                  "--minMapByVariant=pq:0.3,hnswPQ:0.4"
                ],
                "parallel": false,
                "forwardAllArgs": true
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "executor": "@nx/js:tsc",
              "options": {
                "tsConfig": "packages/rag/tsconfig.json",
                "noEmit": true
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "build": {
              "executor": "@nx/js:tsc",
              "options": {
                "tsConfig": "packages/rag/tsconfig.json",
                "main": "packages/rag/src/index.ts",
                "outputPath": "dist/packages/rag",
                "assets": [
                  "packages/rag/benchmarks/**/*"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            }
          },
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "packages/rag/src",
          "projectType": "library",
          "implicitDependencies": []
        }
      },
      "a2a": {
        "name": "a2a",
        "type": "lib",
        "data": {
          "root": "packages/a2a",
          "name": "a2a",
          "tags": [
            "npm:private",
            "scope:a2a",
            "type:shared"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "typecheck",
                "dev:server",
                "docker:build",
                "docker:test",
                "orbstack:deploy",
                "orbstack:status",
                "orbstack:logs",
                "orbstack:stop",
                "orbstack:test",
                "test:safe"
              ]
            },
            "js": {
              "packageName": "@cortex-os/a2a",
              "packageMain": "src/index.ts",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc -p tsconfig.json --noEmit",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "dev:server": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev:server"
              },
              "metadata": {
                "scriptContent": "node -e \"console.log('Dev server would start here - use main build for container')\"",
                "runCommand": "pnpm run dev:server"
              },
              "configurations": {},
              "parallelism": true
            },
            "docker:build": {
              "executor": "nx:run-script",
              "options": {
                "script": "docker:build"
              },
              "metadata": {
                "scriptContent": "./scripts/build-image.sh",
                "runCommand": "pnpm run docker:build"
              },
              "configurations": {},
              "parallelism": true
            },
            "docker:test": {
              "executor": "nx:run-script",
              "options": {
                "script": "docker:test"
              },
              "metadata": {
                "scriptContent": "./scripts/build-image.sh test-only",
                "runCommand": "pnpm run docker:test"
              },
              "configurations": {},
              "parallelism": true
            },
            "orbstack:deploy": {
              "executor": "nx:run-script",
              "options": {
                "script": "orbstack:deploy"
              },
              "metadata": {
                "scriptContent": "./scripts/deploy-orbstack.sh deploy",
                "runCommand": "pnpm run orbstack:deploy"
              },
              "configurations": {},
              "parallelism": true
            },
            "orbstack:status": {
              "executor": "nx:run-script",
              "options": {
                "script": "orbstack:status"
              },
              "metadata": {
                "scriptContent": "./scripts/deploy-orbstack.sh status",
                "runCommand": "pnpm run orbstack:status"
              },
              "configurations": {},
              "parallelism": true
            },
            "orbstack:logs": {
              "executor": "nx:run-script",
              "options": {
                "script": "orbstack:logs"
              },
              "metadata": {
                "scriptContent": "./scripts/deploy-orbstack.sh logs",
                "runCommand": "pnpm run orbstack:logs"
              },
              "configurations": {},
              "parallelism": true
            },
            "orbstack:stop": {
              "executor": "nx:run-script",
              "options": {
                "script": "orbstack:stop"
              },
              "metadata": {
                "scriptContent": "./scripts/deploy-orbstack.sh stop",
                "runCommand": "pnpm run orbstack:stop"
              },
              "configurations": {},
              "parallelism": true
            },
            "orbstack:test": {
              "executor": "nx:run-script",
              "options": {
                "script": "orbstack:test"
              },
              "metadata": {
                "scriptContent": "./scripts/deploy-orbstack.sh test",
                "runCommand": "pnpm run orbstack:test"
              },
              "configurations": {},
              "parallelism": true
            },
            "test:safe": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:safe"
              },
              "metadata": {
                "scriptContent": "node ../../scripts/vitest-safe.mjs run",
                "runCommand": "pnpm run test:safe"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/rollup:rollup",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/packages/a2a",
                "tsConfig": "packages/a2a/tsconfig.lib.json",
                "project": "packages/a2a/package.json",
                "entryFile": "packages/a2a/src/index.ts",
                "external": [
                  "rxjs/operators",
                  "rxjs/websocket",
                  "rxjs/ajax"
                ],
                "useLegacyTypescriptPlugin": false
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "cache": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {
                "lintFilePatterns": [
                  "packages/a2a/src/**/*.ts",
                  "packages/a2a/tests/**/*.ts",
                  "packages/a2a/a2a-core/src/**/*.ts",
                  "packages/a2a/a2a-contracts/src/**/*.ts"
                ]
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "lint",
                "^production"
              ],
              "cache": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "configFile": "packages/a2a/vitest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {
                "ci": {
                  "coverage": true
                }
              },
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            }
          },
          "$schema": "https://raw.githubusercontent.com/nrwl/nx/master/packages/nx/schemas/project-schema.json",
          "projectType": "library",
          "sourceRoot": "packages/a2a/src",
          "implicitDependencies": [],
          "namedInputs": {
            "default": [
              "{projectRoot}/**/*",
              "sharedGlobals"
            ],
            "production": [
              "default",
              "!{projectRoot}/**/?(*.)+(spec|test).[jt]s?(x)?(.snap)",
              "!{projectRoot}/tsconfig.spec.json",
              "!{projectRoot}/src/test-setup.[jt]s",
              "!{projectRoot}/test-setup.[jt]s"
            ]
          }
        }
      },
      "@cortex-os/api": {
        "name": "@cortex-os/api",
        "type": "app",
        "data": {
          "root": "apps/api",
          "name": "@cortex-os/api",
          "tags": [
            "npm:public"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "dev",
                "build",
                "start",
                "test",
                "test:coverage"
              ]
            },
            "js": {
              "packageName": "@cortex-os/api",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "tsx watch src/index.ts",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-script",
              "options": {
                "script": "build"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run build"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "production",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/dist"
              ],
              "cache": true
            },
            "start": {
              "executor": "nx:run-script",
              "options": {
                "script": "start"
              },
              "metadata": {
                "scriptContent": "node dist/index.js",
                "runCommand": "pnpm run start"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "vitest",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            },
            "test:coverage": {
              "executor": "nx:run-script",
              "options": {
                "script": "test:coverage"
              },
              "metadata": {
                "scriptContent": "vitest --coverage",
                "runCommand": "pnpm run test:coverage"
              },
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": [
                "^nx-release-publish"
              ],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "implicitDependencies": []
        }
      },
      "cortex-os-docs": {
        "name": "cortex-os-docs",
        "type": "app",
        "data": {
          "root": "website",
          "name": "cortex-os-docs",
          "tags": [
            "npm:private"
          ],
          "metadata": {
            "targetGroups": {
              "NPM Scripts": [
                "start:local",
                "build:local",
                "serve:local",
                "clear",
                "typecheck",
                "sync",
                "dev",
                "test"
              ]
            },
            "js": {
              "packageName": "cortex-os-docs",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "start:local": {
              "executor": "nx:run-script",
              "options": {
                "script": "start:local"
              },
              "metadata": {
                "scriptContent": "docusaurus start --config docusaurus.config.local.ts --port 3005",
                "runCommand": "pnpm run start:local"
              },
              "configurations": {},
              "parallelism": true
            },
            "build:local": {
              "executor": "nx:run-script",
              "options": {
                "script": "build:local"
              },
              "metadata": {
                "scriptContent": "docusaurus build --config docusaurus.config.local.ts",
                "runCommand": "pnpm run build:local"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve:local": {
              "executor": "nx:run-script",
              "options": {
                "script": "serve:local"
              },
              "metadata": {
                "scriptContent": "docusaurus serve --config docusaurus.config.local.ts",
                "runCommand": "pnpm run serve:local"
              },
              "configurations": {},
              "parallelism": true
            },
            "clear": {
              "executor": "nx:run-script",
              "options": {
                "script": "clear"
              },
              "metadata": {
                "scriptContent": "docusaurus clear",
                "runCommand": "pnpm run clear"
              },
              "configurations": {},
              "parallelism": true
            },
            "typecheck": {
              "executor": "nx:run-script",
              "options": {
                "script": "typecheck"
              },
              "metadata": {
                "scriptContent": "tsc",
                "runCommand": "pnpm run typecheck"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "typecheck",
                "^production"
              ],
              "cache": true
            },
            "sync": {
              "executor": "nx:run-script",
              "options": {
                "script": "sync"
              },
              "metadata": {
                "scriptContent": "tsx sync-docs.ts",
                "runCommand": "pnpm run sync"
              },
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-script",
              "options": {
                "script": "dev"
              },
              "metadata": {
                "scriptContent": "pnpm sync && pnpm start:local",
                "runCommand": "pnpm run dev"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-script",
              "options": {
                "script": "test"
              },
              "metadata": {
                "scriptContent": "vitest run --passWithNoTests",
                "runCommand": "pnpm run test"
              },
              "configurations": {},
              "parallelism": true,
              "inputs": [
                "test",
                "^production"
              ],
              "outputs": [
                "{projectRoot}/coverage"
              ],
              "dependsOn": [
                "^build"
              ],
              "cache": true
            }
          },
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "@cortex-os/a2a-schema-registry": [
        {
          "source": "@cortex-os/a2a-schema-registry",
          "target": "@cortex-os/a2a-common",
          "type": "static"
        },
        {
          "source": "@cortex-os/a2a-schema-registry",
          "target": "a2a",
          "type": "static"
        },
        {
          "source": "@cortex-os/a2a-schema-registry",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        }
      ],
      "@cortex-os/cortex-structure-github": [
        {
          "source": "@cortex-os/cortex-structure-github",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/cortex-structure-github",
          "target": "@cortex-os/contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/cortex-structure-github",
          "target": "@cortex-os/types",
          "type": "static"
        }
      ],
      "@cortex-os/evidence": [
        {
          "source": "@cortex-os/evidence",
          "target": "asbr",
          "type": "static"
        },
        {
          "source": "@cortex-os/evidence",
          "target": "@cortex-os/contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/evidence",
          "target": "a2a",
          "type": "static"
        }
      ],
      "@cortex-os/planner": [
        {
          "source": "@cortex-os/planner",
          "target": "asbr",
          "type": "static"
        },
        {
          "source": "@cortex-os/planner",
          "target": "@cortex-os/contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/planner",
          "target": "a2a",
          "type": "static"
        },
        {
          "source": "@cortex-os/planner",
          "target": "@cortex-os/orchestration",
          "type": "static"
        }
      ],
      "@cortex-os/service-model-gateway": [
        {
          "source": "@cortex-os/service-model-gateway",
          "target": "@cortex-os/mcp-core",
          "type": "static"
        }
      ],
      "@cortex-os/service-orchestration": [
        {
          "source": "@cortex-os/service-orchestration",
          "target": "@cortex-os/observability",
          "type": "static"
        },
        {
          "source": "@cortex-os/service-orchestration",
          "target": "@cortex-os/policy",
          "type": "static"
        },
        {
          "source": "@cortex-os/service-orchestration",
          "target": "@cortex-os/utils",
          "type": "static"
        }
      ],
      "@cortex-os/a2a-observability": [
        {
          "source": "@cortex-os/a2a-observability",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/a2a-observability",
          "target": "@cortex-os/telemetry",
          "type": "static"
        }
      ],
      "@cortex-os/cortex-semgrep-github": [
        {
          "source": "@cortex-os/cortex-semgrep-github",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/cortex-semgrep-github",
          "target": "@cortex-os/contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/cortex-semgrep-github",
          "target": "cortex-sec",
          "type": "static"
        },
        {
          "source": "@cortex-os/cortex-semgrep-github",
          "target": "@cortex-os/types",
          "type": "static"
        }
      ],
      "@cortex-os/ingest": [
        {
          "source": "@cortex-os/ingest",
          "target": "asbr",
          "type": "static"
        },
        {
          "source": "@cortex-os/ingest",
          "target": "@cortex-os/contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/ingest",
          "target": "a2a",
          "type": "static"
        }
      ],
      "@cortex-os/a11y-utils": [],
      "@cortex-os/a2a-common": [],
      "@cortex-os/asbr-schemas": [],
      "@cortex-os/asbr-policy": [],
      "@cortex-os/mcp-marketplace": [
        {
          "source": "@cortex-os/mcp-marketplace",
          "target": "@cortex-os/mcp-registry",
          "type": "static"
        },
        {
          "source": "@cortex-os/mcp-marketplace",
          "target": "@cortex-os/registry",
          "type": "static"
        }
      ],
      "@cortex-os/a2a-contracts": [
        {
          "source": "@cortex-os/a2a-contracts",
          "target": "@cortex-os/contracts",
          "type": "static"
        }
      ],
      "@cortex-os/a2a-transport": [
        {
          "source": "@cortex-os/a2a-transport",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/a2a-transport",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/a2a-transport",
          "target": "@cortex-os/observability",
          "type": "static"
        }
      ],
      "cortex-webui-frontend": [],
      "@cortex-os/a2a-handlers": [
        {
          "source": "@cortex-os/a2a-handlers",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        }
      ],
      "@cortex-os/contracts": [
        {
          "source": "@cortex-os/contracts",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/contracts",
          "target": "asbr",
          "type": "static"
        },
        {
          "source": "@cortex-os/contracts",
          "target": "@cortex-os/evals",
          "type": "static"
        },
        {
          "source": "@cortex-os/contracts",
          "target": "@cortex-os/policy",
          "type": "static"
        }
      ],
      "@cortex-os/cortex-ai-github": [
        {
          "source": "@cortex-os/cortex-ai-github",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/cortex-ai-github",
          "target": "@cortex-os/contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/cortex-ai-github",
          "target": "@cortex-os/types",
          "type": "static"
        }
      ],
      "@cortex-os/telemetry": [],
      "cortex-webui-backend": [
        {
          "source": "cortex-webui-backend",
          "target": "a2a",
          "type": "static"
        },
        {
          "source": "cortex-webui-backend",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "cortex-webui-backend",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "cortex-webui-backend",
          "target": "@cortex-os/a2a-transport",
          "type": "static"
        },
        {
          "source": "cortex-webui-backend",
          "target": "@cortex-os/contracts",
          "type": "static"
        }
      ],
      "@cortex-os/logging": [],
      "@cortex-os/marketplace-api": [
        {
          "source": "@cortex-os/marketplace-api",
          "target": "@cortex-os/mcp-registry",
          "type": "static"
        },
        {
          "source": "@cortex-os/marketplace-api",
          "target": "@cortex-os/registry",
          "type": "static"
        }
      ],
      "@cortex-os/mvp-server": [
        {
          "source": "@cortex-os/mvp-server",
          "target": "@cortex-os/mvp-core",
          "type": "static"
        }
      ],
      "a2a-events": [
        {
          "source": "a2a-events",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        }
      ],
      "@cortex-os/agent-toolkit": [
        {
          "source": "@cortex-os/agent-toolkit",
          "target": "a2a",
          "type": "static"
        },
        {
          "source": "@cortex-os/agent-toolkit",
          "target": "@cortex-os/contracts",
          "type": "static"
        }
      ],
      "@cortex-os/model-gateway": [
        {
          "source": "@cortex-os/model-gateway",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/model-gateway",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/model-gateway",
          "target": "@cortex-os/a2a-transport",
          "type": "static"
        },
        {
          "source": "@cortex-os/model-gateway",
          "target": "@cortex-os/mcp-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/model-gateway",
          "target": "@cortex-os/orchestration",
          "type": "static"
        }
      ],
      "@cortex-os/mvp-group": [
        {
          "source": "@cortex-os/mvp-group",
          "target": "@cortex-os/kernel",
          "type": "static"
        },
        {
          "source": "@cortex-os/mvp-group",
          "target": "@cortex-os/observability",
          "type": "static"
        }
      ],
      "@cortex-os/observability": [
        {
          "source": "@cortex-os/observability",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/observability",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/observability",
          "target": "@cortex-os/a2a-transport",
          "type": "static"
        }
      ],
      "@cortex-os/orchestration": [
        {
          "source": "@cortex-os/orchestration",
          "target": "@cortex-os/a2a-common",
          "type": "static"
        },
        {
          "source": "@cortex-os/orchestration",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/orchestration",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/orchestration",
          "target": "@cortex-os/a2a-transport",
          "type": "static"
        },
        {
          "source": "@cortex-os/orchestration",
          "target": "@cortex-os/contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/orchestration",
          "target": "@cortex-os/hooks",
          "type": "static"
        },
        {
          "source": "@cortex-os/orchestration",
          "target": "@cortex-os/memories",
          "type": "static"
        },
        {
          "source": "@cortex-os/orchestration",
          "target": "@cortex-os/observability",
          "type": "static"
        },
        {
          "source": "@cortex-os/orchestration",
          "target": "@cortex-os/policy",
          "type": "static"
        }
      ],
      "@cortex-os/a2a-core": [
        {
          "source": "@cortex-os/a2a-core",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/a2a-core",
          "target": "a2a-events",
          "type": "static"
        },
        {
          "source": "@cortex-os/a2a-core",
          "target": "@cortex-os/contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/a2a-core",
          "target": "@cortex-os/telemetry",
          "type": "static"
        }
      ],
      "@cortex-os/a2a-services": [
        {
          "source": "@cortex-os/a2a-services",
          "target": "a2a",
          "type": "static"
        },
        {
          "source": "@cortex-os/a2a-services",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/a2a-services",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        }
      ],
      "@cortex-os/cortex-rules": [],
      "@cortex-os/mcp-registry": [
        {
          "source": "@cortex-os/mcp-registry",
          "target": "@cortex-os/mcp-core",
          "type": "static"
        }
      ],
      "@cortex-os/mvp-core": [
        {
          "source": "@cortex-os/mvp-core",
          "target": "@cortex-os/utils",
          "type": "static"
        }
      ],
      "@cortex-os/types": [],
      "@cortex-os/utils": [],
      "@cortex-os/lib": [],
      "@cortex-os/mcp-bridge": [
        {
          "source": "@cortex-os/mcp-bridge",
          "target": "@cortex-os/mcp-core",
          "type": "static"
        }
      ],
      "@cortex-os/prp-runner": [
        {
          "source": "@cortex-os/prp-runner",
          "target": "a2a",
          "type": "static"
        },
        {
          "source": "@cortex-os/prp-runner",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/prp-runner",
          "target": "@cortex-os/kernel",
          "type": "static"
        }
      ],
      "cortex-sec": [],
      "@cortex-os/tdd-coach": [
        {
          "source": "@cortex-os/tdd-coach",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/tdd-coach",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/tdd-coach",
          "target": "@cortex-os/a2a-transport",
          "type": "static"
        },
        {
          "source": "@cortex-os/tdd-coach",
          "target": "a2a",
          "type": "static"
        },
        {
          "source": "@cortex-os/tdd-coach",
          "target": "@cortex-os/memories",
          "type": "static"
        },
        {
          "source": "@cortex-os/tdd-coach",
          "target": "@cortex-os/orchestration",
          "type": "static"
        }
      ],
      "@apps/cortex-webui": [],
      "@cortex-os/commands": [
        {
          "source": "@cortex-os/commands",
          "target": "@cortex-os/agents",
          "type": "static"
        },
        {
          "source": "@cortex-os/commands",
          "target": "@cortex-os/observability",
          "type": "static"
        }
      ],
      "@cortex-os/mcp-core": [],
      "@cortex-os/memories": [
        {
          "source": "@cortex-os/memories",
          "target": "a2a",
          "type": "static"
        },
        {
          "source": "@cortex-os/memories",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/memories",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/memories",
          "target": "@cortex-os/a2a-transport",
          "type": "static"
        },
        {
          "source": "@cortex-os/memories",
          "target": "@cortex-os/rag",
          "type": "static"
        }
      ],
      "@cortex-os/registry": [],
      "security": [
        {
          "source": "security",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "security",
          "target": "@cortex-os/mcp-core",
          "type": "static"
        },
        {
          "source": "security",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "security",
          "target": "@cortex-os/a2a-transport",
          "type": "static"
        },
        {
          "source": "security",
          "target": "@cortex-os/telemetry",
          "type": "static"
        }
      ],
      "@cortex-os/cortex-code": [],
      "@cortex-os/gateway": [
        {
          "source": "@cortex-os/gateway",
          "target": "a2a",
          "type": "static"
        },
        {
          "source": "@cortex-os/gateway",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/gateway",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/gateway",
          "target": "@cortex-os/a2a-transport",
          "type": "static"
        },
        {
          "source": "@cortex-os/gateway",
          "target": "@cortex-os/contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/gateway",
          "target": "@cortex-os/lib",
          "type": "static"
        },
        {
          "source": "@cortex-os/gateway",
          "target": "@cortex-os/mcp-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/gateway",
          "target": "@cortex-os/rag",
          "type": "static"
        },
        {
          "source": "@cortex-os/gateway",
          "target": "@cortex-os/simlab",
          "type": "static"
        }
      ],
      "mvp": [
        {
          "source": "mvp",
          "target": "@cortex-os/kernel",
          "type": "static"
        },
        {
          "source": "mvp",
          "target": "@cortex-os/mvp-core",
          "type": "static"
        },
        {
          "source": "mvp",
          "target": "@cortex-os/prp-runner",
          "type": "static"
        }
      ],
      "@cortex-os/agents": [
        {
          "source": "@cortex-os/agents",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/agents",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/agents",
          "target": "@cortex-os/hooks",
          "type": "static"
        },
        {
          "source": "@cortex-os/agents",
          "target": "@cortex-os/model-gateway",
          "type": "static"
        }
      ],
      "@cortex-os/kernel": [
        {
          "source": "@cortex-os/kernel",
          "target": "@cortex-os/hooks",
          "type": "static"
        }
      ],
      "@cortex-os/policy": [],
      "@cortex-os/simlab": [
        {
          "source": "@cortex-os/simlab",
          "target": "@cortex-os/kernel",
          "type": "static"
        },
        {
          "source": "@cortex-os/simlab",
          "target": "@cortex-os/prp-runner",
          "type": "static"
        },
        {
          "source": "@cortex-os/simlab",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/simlab",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/simlab",
          "target": "@cortex-os/a2a-transport",
          "type": "static"
        }
      ],
      "github": [],
      "@cortex-os/evals": [
        {
          "source": "@cortex-os/evals",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/evals",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/evals",
          "target": "@cortex-os/a2a-transport",
          "type": "static"
        }
      ],
      "@cortex-os/hooks": [
        {
          "source": "@cortex-os/hooks",
          "target": "@cortex-os/observability",
          "type": "static"
        }
      ],
      "cortex-os": [
        {
          "source": "cortex-os",
          "target": "asbr",
          "type": "implicit"
        },
        {
          "source": "cortex-os",
          "target": "a2a",
          "type": "implicit"
        },
        {
          "source": "cortex-os",
          "target": "@cortex-os/memories",
          "type": "implicit"
        },
        {
          "source": "cortex-os",
          "target": "@cortex-os/orchestration",
          "type": "implicit"
        },
        {
          "source": "cortex-os",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "cortex-os",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "cortex-os",
          "target": "a2a-events",
          "type": "static"
        },
        {
          "source": "cortex-os",
          "target": "@cortex-os/a2a-transport",
          "type": "static"
        },
        {
          "source": "cortex-os",
          "target": "@cortex-os/mcp-core",
          "type": "static"
        },
        {
          "source": "cortex-os",
          "target": "@cortex-os/memories",
          "type": "static"
        },
        {
          "source": "cortex-os",
          "target": "@cortex-os/orchestration",
          "type": "static"
        },
        {
          "source": "cortex-os",
          "target": "@cortex-os/rag",
          "type": "static"
        },
        {
          "source": "cortex-os",
          "target": "@cortex-os/simlab",
          "type": "static"
        },
        {
          "source": "cortex-os",
          "target": "@cortex-os/utils",
          "type": "static"
        }
      ],
      "@cortex-os/agui": [
        {
          "source": "@cortex-os/agui",
          "target": "@cortex-os/contracts",
          "type": "static"
        }
      ],
      "asbr": [
        {
          "source": "asbr",
          "target": "@cortex-os/asbr-schemas",
          "type": "static"
        },
        {
          "source": "asbr",
          "target": "@cortex-os/asbr-policy",
          "type": "static"
        },
        {
          "source": "asbr",
          "target": "@cortex-os/utils",
          "type": "static"
        }
      ],
      "@cortex-os/rag": [
        {
          "source": "@cortex-os/rag",
          "target": "@cortex-os/contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/rag",
          "target": "@cortex-os/model-gateway",
          "type": "static"
        },
        {
          "source": "@cortex-os/rag",
          "target": "@cortex-os/agents",
          "type": "static"
        },
        {
          "source": "@cortex-os/rag",
          "target": "@cortex-os/observability",
          "type": "static"
        },
        {
          "source": "@cortex-os/rag",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "@cortex-os/rag",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/rag",
          "target": "@cortex-os/a2a-transport",
          "type": "static"
        }
      ],
      "a2a": [
        {
          "source": "a2a",
          "target": "@cortex-os/a2a-contracts",
          "type": "static"
        },
        {
          "source": "a2a",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "a2a",
          "target": "@cortex-os/a2a-transport",
          "type": "static"
        },
        {
          "source": "a2a",
          "target": "@cortex-os/contracts",
          "type": "static"
        },
        {
          "source": "a2a",
          "target": "@cortex-os/observability",
          "type": "static"
        },
        {
          "source": "a2a",
          "target": "@cortex-os/telemetry",
          "type": "static"
        },
        {
          "source": "a2a",
          "target": "@cortex-os/utils",
          "type": "static"
        }
      ],
      "@cortex-os/api": [
        {
          "source": "@cortex-os/api",
          "target": "@cortex-os/a2a-core",
          "type": "static"
        },
        {
          "source": "@cortex-os/api",
          "target": "a2a-events",
          "type": "static"
        },
        {
          "source": "@cortex-os/api",
          "target": "@cortex-os/memories",
          "type": "static"
        },
        {
          "source": "@cortex-os/api",
          "target": "@cortex-os/orchestration",
          "type": "static"
        }
      ],
      "cortex-os-docs": []
    }
  }
}