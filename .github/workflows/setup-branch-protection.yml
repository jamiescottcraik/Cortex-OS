name: Setup Branch Protection Rules

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Perform a dry run without making changes'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

permissions:
  contents: read
  administration: write

jobs:
  setup-branch-protection:
    name: Configure Branch Protection Rules
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Validate branch protection configuration
        run: |
          echo "🔍 Validating branch protection configuration..."
          
          # Check if the configuration file exists and is valid JSON
          if [[ ! -f .github/branch-protection-rules.json ]]; then
            echo "❌ Branch protection rules file not found"
            exit 1
          fi
          
          # Validate JSON syntax
          if ! jq empty .github/branch-protection-rules.json; then
            echo "❌ Invalid JSON in branch protection rules"
            exit 1
          fi
          
          echo "✅ Configuration validation passed"

      - name: Setup branch protection for main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DRY_RUN: ${{ github.event.inputs.dry_run }}
        run: |
          echo "🛡️ Setting up branch protection for main branch..."
          
          PROTECTION_CONFIG=$(jq '.branch_protection_rules.main' .github/branch-protection-rules.json)
          
          if [[ "$DRY_RUN" == "true" ]]; then
            echo "🔍 DRY RUN: Would apply the following protection to main branch:"
            echo "$PROTECTION_CONFIG" | jq .
          else
            echo "🔐 Applying branch protection to main branch..."
            
            curl -X PUT \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/branches/main/protection" \
              -d "$PROTECTION_CONFIG"
            
            echo "✅ Main branch protection configured"
          fi

      - name: Setup branch protection for develop
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DRY_RUN: ${{ github.event.inputs.dry_run }}
        run: |
          echo "🛡️ Setting up branch protection for develop branch..."
          
          PROTECTION_CONFIG=$(jq '.branch_protection_rules.develop' .github/branch-protection-rules.json)
          
          if [[ "$DRY_RUN" == "true" ]]; then
            echo "🔍 DRY RUN: Would apply the following protection to develop branch:"
            echo "$PROTECTION_CONFIG" | jq .
          else
            echo "🔐 Applying branch protection to develop branch..."
            
            curl -X PUT \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/branches/develop/protection" \
              -d "$PROTECTION_CONFIG"
            
            echo "✅ Develop branch protection configured"
          fi

      - name: Verify branch protection
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DRY_RUN: ${{ github.event.inputs.dry_run }}
        run: |
          if [[ "$DRY_RUN" == "false" ]]; then
            echo "🔍 Verifying branch protection settings..."
            
            # Check main branch protection
            MAIN_PROTECTION=$(curl -s \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/branches/main/protection")
            
            echo "Main branch protection status:"
            echo "$MAIN_PROTECTION" | jq '.required_status_checks.contexts'
            
            # Check develop branch protection  
            DEVELOP_PROTECTION=$(curl -s \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/branches/develop/protection")
            
            echo "Develop branch protection status:"
            echo "$DEVELOP_PROTECTION" | jq '.required_status_checks.contexts'
            
            echo "✅ Branch protection verification completed"
          else
            echo "ℹ️ Skipping verification in dry run mode"
          fi

      - name: Generate protection summary
        run: |
          echo "# Branch Protection Summary" > protection-summary.md
          echo "Generated on: $(date)" >> protection-summary.md
          echo "" >> protection-summary.md
          
          echo "## Protected Branches" >> protection-summary.md
          echo "- **main**: Full protection with 2 required reviews" >> protection-summary.md
          echo "- **develop**: Standard protection with 1 required review" >> protection-summary.md
          echo "" >> protection-summary.md
          
          echo "## Required Status Checks" >> protection-summary.md
          echo "All branches require the following gates to pass:" >> protection-summary.md
          echo "1. ✅ Lint Gate (ESLint, Prettier, TypeScript)" >> protection-summary.md
          echo "2. ✅ Unit Test Gate (85% coverage minimum)" >> protection-summary.md
          echo "3. ✅ RAG Determinism Gate (Content-addressed validation)" >> protection-summary.md
          echo "4. ✅ Accessibility Gate (WCAG 2.2 AA compliance)" >> protection-summary.md
          echo "5. ✅ Security Gate (GitLeaks, SAST, SBOM)" >> protection-summary.md
          echo "" >> protection-summary.md
          
          echo "## Bypass Policies" >> protection-summary.md
          echo "- 🚫 Security gates: **Cannot be bypassed**" >> protection-summary.md
          echo "- 🚫 Accessibility gates: **Cannot be bypassed**" >> protection-summary.md
          echo "- 🚫 Coverage gates: **Cannot be bypassed**" >> protection-summary.md

      - name: Upload protection summary
        uses: actions/upload-artifact@v4
        with:
          name: branch-protection-summary
          path: protection-summary.md
          retention-days: 90