name: Security Scan

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  security-events: write
  contents: read
  actions: read

jobs:
  semgrep:
    name: Semgrep Security Analysis
    runs-on: ubuntu-latest

    container:
      image: semgrep/semgrep

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch full history for better analysis
          fetch-depth: 0

      - name: Run Semgrep with OWASP rules
        run: |
          semgrep scan \
            --config=.semgrep/owasp-precise.yaml \
            --config=.semgrep/owasp-top-10.yaml \
            --config=.semgrep/llm-security.yaml \
            --config=.semgrep/mitre-atlas.yaml \
            --severity=ERROR \
            --severity=WARNING \
            --json \
            --output=semgrep-results.json \
            --max-memory=2048 \
            .

      - name: Upload Semgrep results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: semgrep-results.json

      - name: Upload results as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: semgrep-results
          path: semgrep-results.json
          retention-days: 30

  dependency-check:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run npm audit
        run: |
          pnpm audit --audit-level high --json > npm-audit-results.json || true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Python security audit
        run: |
          uv sync
          uv run pip-audit --format=json --output=python-audit-results.json || true

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-audit-results
          path: |
            npm-audit-results.json
            python-audit-results.json
          retention-days: 30

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [semgrep, dependency-check]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Semgrep results
        uses: actions/download-artifact@v4
        with:
          name: semgrep-results
          path: ./security-results/

      - name: Download dependency audit results
        uses: actions/download-artifact@v4
        with:
          name: dependency-audit-results
          path: ./security-results/

      - name: Generate security summary
        run: |
          echo "# ðŸ”’ Security Scan Summary" > security-summary.md
          echo "" >> security-summary.md
          echo "## Semgrep Analysis" >> security-summary.md

          if [ -f "./security-results/semgrep-results.json" ]; then
            SEMGREP_ERRORS=$(jq '.results | map(select(.extra.severity == "ERROR")) | length' ./security-results/semgrep-results.json)
            SEMGREP_WARNINGS=$(jq '.results | map(select(.extra.severity == "WARNING")) | length' ./security-results/semgrep-results.json)
            echo "- **Critical/High Issues**: $SEMGREP_ERRORS" >> security-summary.md
            echo "- **Medium/Low Issues**: $SEMGREP_WARNINGS" >> security-summary.md
          else
            echo "- No Semgrep results available" >> security-summary.md
          fi

          echo "" >> security-summary.md
          echo "## Dependency Audit" >> security-summary.md

          if [ -f "./security-results/npm-audit-results.json" ]; then
            NPM_HIGH=$(jq '.metadata.vulnerabilities.high // 0' ./security-results/npm-audit-results.json)
            NPM_CRITICAL=$(jq '.metadata.vulnerabilities.critical // 0' ./security-results/npm-audit-results.json)
            echo "- **NPM Critical**: $NPM_CRITICAL" >> security-summary.md
            echo "- **NPM High**: $NPM_HIGH" >> security-summary.md
          fi

          if [ -f "./security-results/python-audit-results.json" ]; then
            PYTHON_VULNS=$(jq '. | length' ./security-results/python-audit-results.json)
            echo "- **Python Vulnerabilities**: $PYTHON_VULNS" >> security-summary.md
          fi

          cat security-summary.md

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('security-summary.md', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
