name: codemap

on:
  pull_request:
    branches:
      - "*"

permissions:
  contents: read
  actions: write

jobs:
  codemap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install optional codemap tooling
        run: |
          python -m pip install --upgrade pip
          python -m pip install lizard

      - name: Generate brAInwav codemap
        run: |
          echo "[brAInwav] Generating codemap snapshot"
          make codemap SCOPE=repo

      - name: Upload codemap artifacts
        uses: actions/upload-artifact@v4
        with:
          name: codemap
          path: out/

  cortex-contract-tests:
    if: ${{ secrets.CONTRACT_CORTEX_SEARCH_URL != '' && secrets.CONTRACT_CORTEX_DOCUMENT_BASE_URL != '' && secrets.CONTRACT_LOCAL_MEMORY_BASE_URL != '' }}
    runs-on: ubuntu-latest
    env:
      CONTRACT_CORTEX_SEARCH_URL: ${{ secrets.CONTRACT_CORTEX_SEARCH_URL }}
      CONTRACT_CORTEX_DOCUMENT_BASE_URL: ${{ secrets.CONTRACT_CORTEX_DOCUMENT_BASE_URL }}
      CONTRACT_CORTEX_API_KEY: ${{ secrets.CONTRACT_CORTEX_API_KEY }}
      CONTRACT_CORTEX_QUERY: ${{ vars.CONTRACT_CORTEX_QUERY }}
      CONTRACT_LOCAL_MEMORY_BASE_URL: ${{ secrets.CONTRACT_LOCAL_MEMORY_BASE_URL }}
      CONTRACT_LOCAL_MEMORY_API_KEY: ${{ secrets.CONTRACT_LOCAL_MEMORY_API_KEY }}
      CONTRACT_LOCAL_MEMORY_NAMESPACE: ${{ vars.CONTRACT_LOCAL_MEMORY_NAMESPACE }}
      CONTRACT_LOCAL_MEMORY_SAMPLE_ID: ${{ vars.CONTRACT_LOCAL_MEMORY_SAMPLE_ID }}
      CONTRACT_LOCAL_MEMORY_QUERY: ${{ vars.CONTRACT_LOCAL_MEMORY_QUERY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv

      - name: Sync dependencies
        run: |
          uv sync --locked

      - name: Run Cortex MCP contract tests
        run: |
          uv run pytest -m contract packages/cortex-mcp/tests/test_contract_live_services.py
