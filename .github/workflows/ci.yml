name: CI
on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main, develop]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  structure:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - run: pnpm structure:validate
      - run: pnpm madge --circular --extensions ts,tsx ./packages || true
      - run: pnpm madge --circular --extensions ts,tsx ./apps || true
      - run: |
          pnpm eslint --ext .ts,.tsx --rule "import/no-restricted-paths: error"

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: pnpm install --frozen-lockfile
      - run: pnpm typecheck

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: astral-sh/setup-uv@v3
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: pnpm install --frozen-lockfile
      - run: uv sync || true
      - run: pnpm test -- --coverage
      - run: uv run pytest --cov=services --cov=libs/python || true
      - run: pnpm nyc check-coverage --lines 80 --functions 80 --branches 70 || true

  mcp_compliance:
    runs-on: ubuntu-latest
    name: MCP Compliance
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - run: pnpm install --frozen-lockfile
      - name: Lint MCP package (errors enforced)
        run: |
          cd packages/mcp
          pnpm lint
      - name: Run MCP tests (includes interop)
        env:
          NODE_OPTIONS: --experimental-vm-modules
        run: |
          cd packages/mcp
          pnpm test -- --run
