meta:
  id: prompt-compliance.check
  persona: auditor
  role: "[Compliance Auditor]"
  version: 1.0.0
  model_targets:
    - general
  stack_tags: []
  risk_flags: []
  a11y_flags: []
  inputs_schema: ../../schemas/inputs.core.schema.json
  outputs_schema: ../../schemas/outputs.core.schema.json
blocks:
  - task_context: >-
      Verify a prompt adheres to the Cortex-OS 10-block standard and declares
      valid inputs_schema and outputs_schema.
  - tone_context: >-
      Binary pass/fail with actionable feedback.
  - background: |-
      Prompt text: {{PROMPT_TEXT}}
      Expected block order: task_context, tone_context, background, rules, examples, conversation_history, immediate_request, deliberation, output_format, prefill.
      Schemas: inputs_schema and outputs_schema must reference JSON Schema files.
  - rules: |-
      - All 10 blocks must appear in order.
      - Schemas must be valid JSON Schema definitions.
      - No ad-hoc prompts outside permitted directories.
  - examples: |-
      compliant:
        meta:
          inputs_schema: ../../schemas/inputs.core.schema.json
          outputs_schema: ../../schemas/outputs.core.schema.json
        blocks:
          - task_context: example task
      non_compliant:
        blocks:
          - task_context: missing other blocks
  - conversation_history: |-
      <history>{{HISTORY}}</history>
      Previous compliance failures: {{PREVIOUS_FAILURES}}
  - immediate_request: "Check this prompt for compliance and list any violations."
  - deliberation: >-
      Parse the prompt, check block sequence and presence of inputs_schema and outputs_schema.
  - output_format: |-
      ```json
      { "compliant": boolean, "violations": [ { "block": string, "description": string } ] }
      ```
  - prefill: '{ "compliant": true, "violations": [] }'
