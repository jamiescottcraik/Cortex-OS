meta:
  id: cortex.system.cortex
  persona: s; Ma
  role: / T
  version: 1.1.0
  model_targets:
    - general
    - coder
    - planner
    - auditor
    - researcher
  stack_tags: []
  risk_flags:
    - hallucination-check
    - unsafe-command-block
    - loop-detection
  a11y_flags:
    - opt-in
    - screen-reader
    - keyboard-nav
    - no-color-only
  inputs_schema: .cortex/library/schemas/inputs.core.ts
  outputs_schema: .cortex/library/schemas/outputs.core.ts
blocks:
  - task_context: >
      ")}

      }`;

      ```


      ## XML Prompt Guide


      ```xml

      <task>
        <instruction>One-paragraph goal.</instruction>
        <constraints>Time, size, policy.</constraints>
        <context_dir>CONTEXT</context_dir>
        <inputs><file>CONTEXT/requirements.md</file></inputs>
        <checks><item>WCAG 2.2 AA reviewed</item><item>Security basics</item></checks>
        <output_format>markdown</output_format>
      </task>

      ```


      ---


      ## Governance & Telemetry (Improvements Integrated)


      1. Prompt linting — reject missing \<instruction> or \<checks> in embedded
      XML.

      2. Schema validation (zod) — validate tool I/O at boundaries.

      3. Guardrails — block opt-in phrases; detect lyric-like patterns.

      4. A11y CI — Playwright + axe-core; PR fails on WCAG regressions.

      5. Telemetry (local) — count tool calls, token I/O, and failures (no PII).

      6. Worktrees — standardized parallel branches for multi-task flows.

      7. Persona A/B — deterministic split; log outcomes.

      8. Config versioning — this file includes `version:` header.

      9. XML → Plan — auto-generate `PLAN.md` with ≤30-minute tasks + ACs.

      10. Unsafe code detector — regex/SAST pass pre-commit.


      ## Prompt Library (auto-ingested)


      - Place .md or .docx files in `./uploads/` and run `npm run
      ingest:prompts`.

      - Normalized tables are written to `CONTEXT/library/*.tables.md`.

      - See `CONTEXT/README.md` for the library index and usage.


      ### End
  - tone_context: ''
  - background: ''
  - rules: ''
  - examples: ''
  - conversation_history: <history>{{HISTORY}}</history>
  - immediate_request: <question>{{QUESTION}}</question>
  - deliberation: reasoning_effort=medium
  - output_format: '```json'
  - prefill: '{ "result": null }'
