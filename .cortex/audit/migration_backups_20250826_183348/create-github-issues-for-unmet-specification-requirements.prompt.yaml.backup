meta:
  id: cortex.create-github-issues-for-unmet-specification-requirements.prompt
  persona: Assistant
  role: General Assistant
  version: 1.1.0
  model_targets:
    - general
    - coder
    - planner
    - auditor
    - researcher
  stack_tags: []
  risk_flags:
    - hallucination-check
    - unsafe-command-block
    - loop-detection
  a11y_flags:
    - opt-in
    - screen-reader
    - keyboard-nav
    - no-color-only
  inputs_schema: .cortex/library/schemas/inputs.core.ts
  outputs_schema: .cortex/library/schemas/outputs.core.ts
blocks:
  - task_context: ''
  - tone_context: ''
  - background: >-
      ---

      mode: "agent"

      description: "Create GitHub Issues for unimplemented requirements from
      specification files using feature_request.yml template."

      tools:
        [
          "codebase",
          "search",
          "github",
          "create_issue",
          "search_issues",
          "update_issue",
        ]
      ---


      # Create GitHub Issues for Unmet Specification Requirements


      Create GitHub Issues for unimplemented requirements in the specification
      at `${file}`.


      ## Process


      1. Analyze specification file to extract all requirements

      2. Check codebase implementation status for each requirement

      3. Search existing issues using `search_issues` to avoid duplicates

      4. Create new issue per unimplemented requirement using `create_issue`

      5. Use `feature_request.yml` template (fallback to default)


      ## Requirements


      - One issue per unimplemented requirement from specification

      - Clear requirement ID and description mapping

      - Include implementation guidance and acceptance criteria

      - Verify against existing issues before creation


      ## Issue Content


      - Title: Requirement ID and brief description

      - Description: Detailed requirement, implementation method, and context

      - Labels: feature, enhancement (as appropriate)


      ## Implementation Check


      - Search codebase for related code patterns

      - Check related specification files in `/spec/` directory

      - Verify requirement isn't partially implemented
  - rules: ''
  - examples: ''
  - conversation_history: <history>{{HISTORY}}</history>
  - immediate_request: <question>{{QUESTION}}</question>
  - deliberation: reasoning_effort=medium
  - output_format: '```json'
  - prefill: '{ "result": null }'
