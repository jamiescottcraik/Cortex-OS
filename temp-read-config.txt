  /**
   * Read the current MCP runtime configuration
   */
  async readConfig(): Promise<McpRuntimeConfig> {
    const configPath = this.getPrimaryConfigPath();

    try {
      const content = await fs.readFile(configPath, 'utf-8');
      const rawConfig = JSON.parse(content);

      const config = rawConfig as McpRuntimeConfig;

      // Ensure servers object exists
      if (!config.servers) {
        config.servers = {};
      }

      return config;
    } catch {
      // Return empty config if file doesn't exist or is invalid
      return {
        servers: {},
        metadata: {
          lastUpdated: new Date().toISOString(),
          version: '1.0.0',
          totalServers: 0,
        },
      };
    }
  }