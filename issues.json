[
  {
    "file": "/Users/jamiecraik/.Cortex-OS/package.json",
    "lines": "45,71-72",
    "severity": "medium",
    "category": "typo-configuration",
    "description": "Typo 'ppnpm' instead of 'pnpm' in script commands",
    "evidence": "Lines 45,71-72: \"ppnpm run test:security:all\", \"ppnpm run dev\", \"ppnpm run build\" should be 'pnpm'",
    "fix": "Replace 'ppnpm' with 'pnpm' in all script commands",
    "tests_to_add": "Verify script execution works with correct command"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/package.json",
    "lines": "76",
    "severity": "medium",
    "category": "configuration-inconsistency",
    "description": "Lint script changed from 'mise run lint' to 'biome lint .' without format script update",
    "evidence": "Line 76: 'lint': 'biome lint .' but format still uses prettier syntax",
    "fix": "Ensure consistent formatting/linting tooling - either use biome for both or mise for both",
    "tests_to_add": "Test both lint and format commands work correctly"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/tsconfig.json",
    "lines": "11-19,32-33",
    "severity": "high",
    "category": "type-safety",
    "description": "TypeScript strict mode completely disabled compromising type safety",
    "evidence": "Lines 11-19: All strict checks disabled (strict: false, noImplicitAny: false, etc.)",
    "fix": "Gradually enable strict mode checks starting with noImplicitAny and strictNullChecks",
    "tests_to_add": "Add type checking tests to prevent regressions"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/packages/mvp/src/nodes/evaluation.ts",
    "lines": "99-313",
    "severity": "high",
    "category": "function-length",
    "description": "validateTDDCycle function is 214 lines long, exceeding 40-line limit",
    "evidence": "Function spans lines 99-313 with complex nested logic and multiple responsibilities",
    "fix": "Refactor into smaller functions: extractTestFiles, runTestSuite, validateCoverage, checkGitEvidence",
    "tests_to_add": "Unit tests for each extracted function"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/packages/mvp/src/nodes/evaluation.ts",
    "lines": "316-514",
    "severity": "high",
    "category": "function-length",
    "description": "validateCodeReview function is 198 lines long, exceeding 40-line limit",
    "evidence": "Function spans lines 316-514 with multiple tool integrations and complex error handling",
    "fix": "Refactor into smaller functions: runESLint, runPylint, analyzeComplexity, generateRecommendations",
    "tests_to_add": "Unit tests for each tool integration"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/packages/mvp/src/nodes/evaluation.ts",
    "lines": "743-877",
    "severity": "medium",
    "category": "function-length",
    "description": "validateQualityBudgets function is 134 lines long, exceeding 40-line limit",
    "evidence": "Function spans lines 743-877 with multiple quality metric validations",
    "fix": "Extract quality metric calculations into separate functions",
    "tests_to_add": "Unit tests for accessibility, performance, and security budget validations"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/packages/agents/src/agents/documentation-agent.ts",
    "lines": "200-238,430-485",
    "severity": "medium",
    "category": "function-length",
    "description": "generateDocumentation function is 38 lines and parseDocumentationResponse is 55 lines",
    "evidence": "Functions approach or exceed 40-line guideline with complex logic",
    "fix": "Refactor parseDocumentationResponse to extract JSON parsing and fallback handling",
    "tests_to_add": "Unit tests for response parsing edge cases"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/apps/cortex-os/src/boot/simlab.ts",
    "lines": "1",
    "severity": "high",
    "category": "dead-code",
    "description": "File contains FIXME about migration needed for removed micro-packages",
    "evidence": "Line 1: 'FIXME: Migration needed - these imports reference removed micro-packages'",
    "fix": "Complete the migration or remove the file if no longer needed",
    "tests_to_add": "Integration tests for simlab boot process after migration"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/packages/mcp-bridge/src/mcp-demo-server.ts",
    "lines": "12-14,23-24,29-30",
    "severity": "medium",
    "category": "commented-code",
    "description": "Large blocks of commented-out import and initialization code",
    "evidence": "Lines 12-14, 23-24, 29-30: Commented imports and class properties for A2ASecurityManager",
    "fix": "Remove commented code if no longer needed or complete the implementation",
    "tests_to_add": "If keeping code, add tests for security manager integration"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/packages/mvp-group/mvp/src/lib/strategy-node.ts",
    "lines": "8",
    "severity": "medium",
    "category": "todo-comments",
    "description": "TODO comment indicates unimplemented functionality",
    "evidence": "Line 8: '// TODO: Implement strategy node when needed'",
    "fix": "Implement the strategy node or remove if not needed",
    "tests_to_add": "Tests for strategy node implementation"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/packages/kernel/tests/critical-issues.test.ts",
    "lines": "75,150,176",
    "severity": "high",
    "category": "test-debt",
    "description": "Test file uses 'any' type and TODO comments indicating incomplete type safety",
    "evidence": "Lines 75,150,176: 'as any' casts with TODO comments about proper type-safe implementations",
    "fix": "Implement proper TypeScript types and remove 'any' casts",
    "tests_to_add": "Type-safe test utilities and mocks"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/packages/mcp-bridge/tests/index.test.js",
    "lines": "17",
    "severity": "medium",
    "category": "test-incompleteness",
    "description": "Test file contains only a TODO comment with no actual tests",
    "evidence": "Line 17: '// TODO: Add comprehensive tests following TDD principles'",
    "fix": "Implement comprehensive test suite for mcp-bridge functionality",
    "tests_to_add": "Complete test coverage for MCP bridge operations"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/packages/model-gateway/src/server.ts",
    "lines": "270,272,280",
    "severity": "low",
    "category": "console-logs",
    "description": "Console.log statements in production code without proper logging framework",
    "evidence": "Lines 270,272,280: Direct console.log calls for initialization messages",
    "fix": "Replace with proper logging framework (winston, pino, etc.)",
    "tests_to_add": "Tests to verify logging output in different environments"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/packages/model-gateway/src/model-router.ts",
    "lines": "192,284,293,326,338,379,388,424,433",
    "severity": "low",
    "category": "console-logs",
    "description": "Multiple console.log and console.warn statements in production code",
    "evidence": "Various lines: Direct console logging without structured logging framework",
    "fix": "Implement structured logging with appropriate log levels",
    "tests_to_add": "Logging tests to verify proper error handling output"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/packages/rag/src/generation/multi-model.js",
    "lines": "1-40",
    "severity": "medium",
    "category": "javascript-in-typescript-project",
    "description": "JavaScript file in TypeScript project without type definitions",
    "evidence": "JavaScript file in packages structure that should be TypeScript",
    "fix": "Convert to TypeScript or add proper type definitions",
    "tests_to_add": "Type safety tests for the converted module"
  },
  {
    "file": "Multiple files",
    "lines": "Various",
    "severity": "low",
    "category": "default-exports",
    "description": "Default exports used instead of named exports in configuration files",
    "evidence": "15 files use 'export default' including config files and test setups",
    "fix": "Convert to named exports where appropriate, especially for utility functions",
    "tests_to_add": "Import/export consistency tests"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/tools/scripts/generate-sbom.ts",
    "lines": "9,16-19",
    "severity": "medium",
    "category": "npm-usage",
    "description": "Script uses 'npm' command instead of project's 'pnpm' package manager",
    "evidence": "Lines 9,16-19: Uses 'npx' and suggests 'npm install' commands",
    "fix": "Replace with pnpm equivalents: 'pnpm dlx' and 'pnpm add'",
    "tests_to_add": "SBOM generation tests with pnpm"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/tools/review/index.ts",
    "lines": "32-37",
    "severity": "low",
    "category": "script-consistency",
    "description": "Review tool uses 'pnpm -s' prefix which may be inconsistent",
    "evidence": "Lines 32-37: Multiple 'pnpm -s' commands that might need verification",
    "fix": "Verify these script names exist in package.json and work correctly",
    "tests_to_add": "Integration tests for review tool functionality"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/apps/cortex-os/packages/evidence/analytics/src/pattern-analyzer.ts",
    "lines": "577",
    "severity": "low",
    "category": "todo-comments",
    "description": "TODO comment for unimplemented circular pattern detection",
    "evidence": "Line 577: '// TODO: Implement circular pattern detection.'",
    "fix": "Implement circular pattern detection or remove TODO if not needed",
    "tests_to_add": "Tests for circular pattern detection once implemented"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/apps/cortex-os/packages/ingest/src/dispatch.ts",
    "lines": "75",
    "severity": "low",
    "category": "todo-comments",
    "description": "TODO comment for budgeted downloader implementation",
    "evidence": "Line 75: '// TODO: fetch and parse with budgeted downloader; emit SSE events'",
    "fix": "Implement budgeted downloader or remove TODO if not needed",
    "tests_to_add": "Tests for SSE event emission functionality"
  },
  {
    "file": "/Users/jamiecraik/.Cortex-OS/vitest.basic.config.ts",
    "lines": "8",
    "severity": "low",
    "category": "typescript-ignore",
    "description": "TypeScript error suppressed with @ts-expect-error comment",
    "evidence": "Line 8: @ts-expect-error comment for workspace configuration",
    "fix": "Fix the underlying TypeScript issue or use proper type definitions",
    "tests_to_add": "Configuration validation tests"
  }
]
