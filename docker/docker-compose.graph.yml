version: '3.8'

services:
  # Graphiti - Temporal Knowledge Graph
  graphiti:
    image: getzep/graphiti:latest
    ports:
      - '8000:8000'
    environment:
      - ZEP_NLP_SERVER_URL=http://nlp-server:8000
      - ZEP_STORE_TYPE=postgres
      - ZEP_POSTGRES_DSN=postgresql://postgres:cortex-postgres-password@postgres:5432/cortex_orchestration
    depends_on:
      - postgres
      - nlp-server
    networks:
      - cortex-network

  # NLP Server for Graphiti
  nlp-server:
    image: getzep/zep-nlp-server:latest
    ports:
      - '8001:8000'
    environment:
      - ZEP_LOG_LEVEL=info
    networks:
      - cortex-network

  # Redis for caching and session management
  redis:
    image: redis:7.2-alpine
    container_name: cortex-redis
    ports:
      - '6379:6379'
    environment:
      - REDIS_PASSWORD=cortex-redis-password
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - cortex-network
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass cortex-redis-password

  # PostgreSQL for structured data and metadata
  postgres:
    image: postgres:16-alpine
    container_name: cortex-postgres
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=cortex_orchestration
      - POSTGRES_USER=cortex
      - POSTGRES_PASSWORD=cortex-postgres-password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    networks:
      - cortex-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U cortex -d cortex_orchestration']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

networks:
  cortex-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
