generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Source {
  id        String     @id @default(cuid())
  kind      String
  url       String?    @db.Text
  createdAt DateTime   @default(now())
  documents Document[]
}

model Document {
  id        String     @id @default(cuid())
  sourceId  String
  source    Source     @relation(fields: [sourceId], references: [id])
  title     String
  mime      String
  sha256    String     @unique
  createdAt DateTime   @default(now())
  chunks    Chunk[]
  evidence  Evidence[]

  @@index([sourceId])
}

model Chunk {
  id         String     @id @default(cuid())
  documentId String
  document   Document   @relation(fields: [documentId], references: [id])
  ord        Int
  text       String     @db.Text
  embedding  Bytes?
  meta       Json?
  evidence   Evidence[]

  @@index([documentId, ord])
}

model Project {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  tasks     Task[]
}

model Task {
  id        String     @id @default(cuid())
  projectId String
  project   Project    @relation(fields: [projectId], references: [id])
  title     String
  status    String     @default("backlog")
  createdAt DateTime   @default(now())
  evidence  Evidence[]

  @@index([projectId])
}

model Evidence {
  id         String   @id @default(cuid())
  taskId     String
  documentId String
  chunkId    String
  start      Int?
  end        Int?
  task       Task     @relation(fields: [taskId], references: [id])
  document   Document @relation(fields: [documentId], references: [id])
  chunk      Chunk    @relation(fields: [chunkId], references: [id])
}
