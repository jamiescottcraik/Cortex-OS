{
  "type": "module",
  "name": "cortex-os",
  "version": "1.0.0",
  "private": true,
  "license": "(Apache-2.0 OR Commercial)",
  "packageManager": "pnpm@10.13.1",
  "bin": {
    "cortex": "./bin/cortex",
    "cortex-cli": "./apps/cortex-cli/dist/index.js"
  },
  "main": "./dist/index.js",
  "types": "./dist/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.js",
      "require": "./dist/index.js"
    }
  },
  "files": [
    "dist",
    "bin",
    "apps/cortex-cli/dist"
  ],
  "scripts": {
    "readiness:init": "node tools/readiness/generate-readiness-yml.mjs",
    "readiness:check": "node tools/readiness/check-readiness.mjs",
    "archive:docs:dry": "node scripts/maintenance/relocate-files.mjs --dry",
    "archive:docs": "node scripts/maintenance/relocate-files.mjs",
    "pretest": "bash scripts/kill-memory-hogs.sh 2>/dev/null || true",
    "premcp": "bash scripts/kill-memory-hogs.sh 2>/dev/null || true",
    "prebuild": "bash scripts/kill-memory-hogs.sh 2>/dev/null || true",
    "memory:monitor": "bash scripts/memory-monitor.sh",
    "memory:daemon": "bash scripts/memory-monitor.sh daemon",
    "memory:clean": "bash scripts/kill-memory-hogs.sh",
    "vscode:optimize": "echo 'VS Code optimization disabled for stability'",
    "vscode:optimize:gentle": "echo 'VS Code optimization disabled for stability'",
    "test": "cross-env NODE_OPTIONS=\"--max-old-space-size=2048 --expose-gc\" VITEST_MAX_THREADS=1 VITEST_MIN_THREADS=1 VITEST_MAX_FORKS=1 VITEST_MIN_FORKS=1 vitest run --no-coverage",
    "test:watch": "cross-env NODE_OPTIONS=\"--max-old-space-size=2048 --expose-gc\" VITEST_MAX_THREADS=1 VITEST_MIN_THREADS=1 VITEST_MAX_FORKS=1 VITEST_MIN_FORKS=1 vitest --no-coverage",
    "test:coverage": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096 --expose-gc\" VITEST_MAX_THREADS=1 VITEST_MIN_THREADS=1 VITEST_MAX_FORKS=1 VITEST_MIN_FORKS=1 vitest run --coverage --coverage.reporter=text-summary --coverage.reporter=json-summary",
    "test:coverage:threshold": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096 --expose-gc\" VITEST_MAX_THREADS=1 VITEST_MIN_THREADS=1 VITEST_MAX_FORKS=1 VITEST_MIN_FORKS=1 vitest run --coverage --coverage.reporter=text-summary --coverage.reporter=json-summary --coverage.thresholds.statements=90 --coverage.thresholds.branches=90 --coverage.thresholds.functions=90 --coverage.thresholds.lines=90",
    "test:policy": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" VITEST_MAX_THREADS=2 VITEST_MIN_THREADS=1 VITEST_MAX_FORKS=2 VITEST_MIN_FORKS=1 vitest run -c vitest.policy.config.ts",
    "test:launch": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" VITEST_MAX_THREADS=2 VITEST_MIN_THREADS=1 VITEST_MAX_FORKS=2 VITEST_MIN_FORKS=1 vitest run -c tests/launch-readiness/vitest.config.ts",
    "ci:launch": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" vitest run -c vitest.launch.config.ts --reporter=dot",
    "test:gitmcp": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" VITEST_MAX_THREADS=2 VITEST_MIN_THREADS=1 VITEST_MAX_FORKS=2 VITEST_MIN_FORKS=1 vitest run -c vitest.gitmcp.config.ts",
    "ci:gitmcp": "pnpm test:gitmcp",
    "test:integration": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" VITEST_MAX_THREADS=2 VITEST_MIN_THREADS=1 VITEST_MAX_FORKS=2 VITEST_MIN_FORKS=1 vitest run -c vitest.integration.config.ts",
    "test:integration:multi-agent": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" VITEST_MAX_THREADS=2 VITEST_MIN_THREADS=1 VITEST_MAX_FORKS=2 VITEST_MIN_FORKS=1 vitest run tests/integration/multi-agent-workflow.test.ts",
    "test:integration:cli": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" VITEST_MAX_THREADS=2 VITEST_MIN_THREADS=1 VITEST_MAX_FORKS=2 VITEST_MIN_FORKS=1 vitest run tests/integration/cli-commands.test.ts",
    "test:integration:e2e": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" VITEST_MAX_THREADS=2 VITEST_MIN_THREADS=1 VITEST_MAX_FORKS=2 VITEST_MIN_FORKS=1 vitest run tests/integration/end-to-end-scenarios.test.ts",
    "test:integration:security": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" VITEST_MAX_THREADS=2 VITEST_MIN_THREADS=1 VITEST_MAX_FORKS=2 VITEST_MIN_FORKS=1 vitest run tests/integration/security-validation.test.ts",
    "test:accessibility": "turbo run test:accessibility",
    "test:a11y": "turbo run test:a11y",
    "wcag3:assess": "node scripts/wcag3-tracker.mjs assess",
    "wcag3:status": "cat a11y/wcag-roadmap.md",
    "test:security": "npm run test:integration:security",
    "test:security:unit": "vitest run tests/security/database-wrapper.unit.test.ts tests/security/neo4j-wrapper.unit.test.ts tests/security/command-executor.unit.test.ts",
    "test:security:integration": "vitest run tests/security/security-wrappers.integration.test.ts",
    "test:security:regression": "vitest run tests/security/security-regression.test.ts",
    "test:security:coverage": "vitest run tests/security/ --coverage",
    "test:security:all": "npm run test:security:unit && npm run test:security:integration && npm run test:security:regression",
    "test:security:ci": "npm run test:security:all -- --reporter=dot",
    "security:scan": "cross-env NODE_OPTIONS=\"--max-old-space-size=2048\" semgrep scan --config=.semgrep/owasp-precise.yaml --severity=ERROR . --max-memory=2048",
    "security:scan:all": "cross-env NODE_OPTIONS=\"--max-old-space-size=2048\" semgrep scan --config=.semgrep/owasp-precise.yaml --config=.semgrep/owasp-top-10-improved.yaml . --max-memory=2048",
    "security:audit": "npm audit --audit-level=high",
    "security:typecheck": "npx tsc --noEmit --project tsconfig.json",
    "typecheck": "npx tsc --noEmit --project tsconfig.json",
    "security:run": "node scripts/run-security-tests.mjs",
    "mcp:start": "cd packages/mcp && npm start",
    "mcp:dev": "cd packages/mcp && npm run dev",
    "mcp:build": "cd packages/mcp && npm run build",
    "mcp:smoke": "node packages/mcp/scripts/smoke/mcp-smoke.mjs",
    "mcp:test": "packages/mcp/scripts/test-mcp.sh",
    "mcp:start-with-tunnel": "packages/mcp/scripts/start-mcp-with-tunnel.sh",
    "lint": "eslint .",
    "lint:security": "eslint \"{apps,packages}/**/*.{js,jsx,ts,tsx}\" --config=eslint-security.config.js",
    "format": "prettier --write --ignore-path .prettierignore \"{apps,packages,scripts,tests,cli,server,src}/**/*.{js,jsx,ts,tsx,md,mdx,json,yml,yaml,css,scss}\" \"docs/**/*.md\" \"*.{md,json,yml,yaml}\" \"!site/**\" \"!deploy/**\" \"!**/*.html\"",
    "format:check": "prettier --check --ignore-path .prettierignore \"{apps,packages,scripts,tests,cli,server,src}/**/*.{js,jsx,ts,tsx,md,mdx,json,yml,yaml,css,scss}\" \"docs/**/*.md\" \"*.{md,json,yml,yaml}\" \"!site/**\" \"!deploy/**\" \"!**/*.html\"",
    "build": "turbo run build",
    "build:wasm": "./node_modules/.bin/tree-sitter build --wasm node_modules/tree-sitter-javascript -o packages/mvp-core/wasm/tree-sitter-javascript.wasm && ./node_modules/.bin/tree-sitter build --wasm node_modules/tree-sitter-typescript/typescript -o packages/mvp-core/wasm/tree-sitter-typescript.wasm && ./node_modules/.bin/tree-sitter build --wasm node_modules/tree-sitter-python -o packages/mvp-core/wasm/tree-sitter-python.wasm && ./node_modules/.bin/tree-sitter build --wasm node_modules/tree-sitter-go -o packages/mvp-core/wasm/tree-sitter-go.wasm",
    "build:with-gates": "turbo run gates:check && turbo run build",
    "build:carbon": "./scripts/carbon-monitoring/carbon-aware-build.mjs turbo run build",
    "dev": "turbo run dev",
    "dev:secure": "op run --env-file=.env.1password -- turbo run dev",
    "docs:api": "python scripts/generate-api-docs.py",
    "docs:generate": "tsx scripts/generate-docs.ts",
    "docs:watch": "tsx scripts/generate-docs.ts && npx chokidar 'packages/*/src/**/*.{ts,tsx,py}' -c 'tsx scripts/generate-docs.ts'",
    "performance:budget": "ANALYZE=true pnpm --filter @brainwav/web build",
    "prepare": "node -e \"try{require('husky').install()}catch(e){console.log('[prepare] husky not installed, skipping hooks')}\"",
    "env:load": "./scripts/load-1password-env.sh",
    "env:test": "op run --env-file=.env.1password -- env | grep -E '(OPENAI|GITHUB|SONAR)'",
    "docs:build": "mkdocs build",
    "docs:links": "node scripts/docs-link-check.mjs",
    "docs:serve": "mkdocs serve --dev-addr=0.0.0.0:8000",
    "docs:dev": "mkdocs serve --livereload --watch=packages/",
    "docs:deploy": "mkdocs gh-deploy --clean --message 'Deploy docs with accessibility and evidence links'",
    "docs:accessibility:validate": "pa11y-ci --sitemap http://localhost:8000/sitemap.xml --standard WCAG2AA",
    "docs:accessibility:audit": "axe-cli http://localhost:8000 --tags wcag2a,wcag2aa --reporter json --output docs/accessibility-audit.json",
    "atlas:assess": "python -m apps.cortex-py.src.security.atlas.atlas_engine",
    "security:unified": "python -m apps.cortex-py.src.security.unified_security",
    "deps:analyze": "node scripts/analyze-dependencies.mjs",
    "license:scan": "node scripts/license/license-scanner.mjs",
    "license:validate": "node scripts/license/license-scanner.mjs",
    "sbom:generate": "node scripts/generate-sbom.mjs",
    "compliance:all": "pnpm license:validate && pnpm sbom:generate",
    "compliance:dashboard": "node scripts/compliance-dashboard.mjs",
    "compliance:monitor": "node scripts/legal-notifications.mjs monitor",
    "compliance:test:notification": "node scripts/legal-notifications.mjs test",
    "compliance:external-scan": "node scripts/external-license-integration.mjs scan",
    "structure:validate": "node scripts/validate-structure.mjs",
    "tdd:plan": "tsx tools/tdd/plan.ts",
    "tdd:ci": "tsx tools/tdd/ci.ts",
    "bloat:check": "node scripts/check-bloat.mjs",
    "project:optimize": "npm run deps:analyze && npm run structure:validate && npm run bloat:check",
    "organize-docs": "tsx scripts/doc-organizer.ts",
    "organize-docs:apply": "tsx scripts/doc-organizer.ts --apply",
    "organize-files": "node tools/file-organizer/organize.mjs",
    "organize-files:dry-run": "node tools/file-organizer/organize.mjs --dry-run",
    "python:sync": "uv sync",
    "python:sync:dev": "uv sync --dev",
    "python:add": "uv add",
    "python:remove": "uv pip uninstall",
    "python:list": "uv pip list",
    "python:migrate": "scripts/python/migrate-to-uv.sh",
    "test:structure": "vitest run tests/structure/",
    "carbon:setup": "./scripts/carbon-monitoring/setup-carbon-monitoring.sh",
    "carbon:build": "./scripts/carbon-monitoring/carbon-aware-build.mjs npm run build",
    "carbon:test": "./scripts/carbon-monitoring/carbon-aware-build.mjs npm run test",
    "carbon:dashboard": "echo 'Grafana Dashboard: http://localhost:3001 (admin/cortex123)'",
    "deploy:production": "./scripts/deploy-production.sh",
    "backup:auto": "./scripts/auto-commit.sh",
    "backup:start": "mkdir -p logs && nohup ./scripts/auto-commit.sh > logs/auto-commit.log 2>&1 &",
    "backup:stop": "pkill -f auto-commit.sh",
    "pw:test": "playwright test",
    "pw:report": "playwright show-report",
    "pw:update": "playwright test --update-snapshots",
    "pw:test:debug": "playwright test --debug",
    "pw:test:ui": "playwright test --ui",
    "ci:governance": "pnpm format:check && pnpm lint && pnpm test:security && pnpm structure:validate && pnpm license:validate && pnpm ci:mcp-path",
    "cli:check": "npx tsx apps/cortex-cli/packages/cli-tools/src/consolidation/check-consolidation.ts",
    "codemap": "tsx tools/scripts/generate-code-map.ts",
    "tui:preview": "npx tsx apps/cortex-cli/packages/cortex-cli-ui/src/bin.ts --ui=tui",
    "tui:preview:plain": "npx tsx apps/cortex-cli/packages/cortex-cli-ui/src/bin.ts --ui=tui --theme=plain",
    "tui:preview:rich": "npx tsx apps/cortex-cli/packages/cortex-cli-ui/src/bin.ts --ui=tui --theme=rich",
    "tui:dev": "npx tsx watch apps/cortex-cli/packages/cortex-cli-ui/src/bin.ts --ui=tui --theme=plain",
    "tui:dev:rich": "npx tsx watch apps/cortex-cli/packages/cortex-cli-ui/src/bin.ts --ui=tui --theme=rich",
    "check:layout": "tsx tools/repo/check-layout.ts --suggest-fix",
    "check:agents-hash": "tsx tools/validators/agents-hash-check.ts",
    "check:pr-prov": "tsx tools/validators/pr-provenance-check.ts",
    "check:a11y-docs": "tsx tools/validators/axe-docs-check.ts",
    "fix:agents-heads": "tsx .cortex/tooling/check-agents.ts",
    "verify:all": "pnpm check:layout && pnpm check:docs && pnpm check:a11y-docs",
    "simlab:smoke": "turbo run simlab:smoke --filter=@cortex-os/simlab-mono",
    "simlab:critical": "turbo run simlab:critical --filter=@cortex-os/simlab-mono",
    "simlab:full": "turbo run simlab:full --filter=@cortex-os/simlab-mono",
    "simlab:report": "turbo run simlab:report --filter=@cortex-os/simlab-mono",
    "simlab:gates": "turbo run simlab:gates --filter=@cortex-os/simlab-mono",
    "sim:status": "turbo run sim:status --filter=@cortex-os/simlab-mono",
    "dev:orbstack": "docker compose --env-file infra/compose/.env.dev -f infra/compose/docker-compose.dev.yml --profile dev-full up --build -d",
    "dev:orbstack:min": "docker compose --env-file infra/compose/.env.dev -f infra/compose/docker-compose.dev.yml --profile dev-min up --build -d",
    "dev:orbstack:full": "docker compose --env-file infra/compose/.env.dev -f infra/compose/docker-compose.dev.yml --profile dev-full up --build -d",
    "dev:orbstack:web": "docker compose --env-file infra/compose/.env.dev -f infra/compose/docker-compose.dev.yml --profile web up --build -d",
    "dev:orbstack:api": "docker compose --env-file infra/compose/.env.dev -f infra/compose/docker-compose.dev.yml --profile api up --build -d",
    "dev:orbstack:workers": "docker compose --env-file infra/compose/.env.dev -f infra/compose/docker-compose.dev.yml --profile workers up --build -d",
    "dev:orbstack:obs": "docker compose --env-file infra/compose/.env.dev -f infra/compose/docker-compose.dev.yml --profile observability up --build -d",
    "dev:orbstack:demo": "docker compose --env-file infra/compose/.env.dev -f infra/compose/docker-compose.dev.yml --profile dev-full --profile web --profile observability up --build -d",
    "dev:orbstack:down": "docker compose --env-file infra/compose/.env.dev -f infra/compose/docker-compose.dev.yml down",
    "dev:orbstack:ps": "docker compose --env-file infra/compose/.env.dev -f infra/compose/docker-compose.dev.yml ps",
    "dev:orbstack:logs": "docker compose --env-file infra/compose/.env.dev -f infra/compose/docker-compose.dev.yml logs -f"
  },
  "//": "The following review and governance scripts were removed: review, typecheck, a11y, depgraph, unused, circles, vulns. If your workflow depends on them, please refer to project documentation for migration guidance or consider restoring them as needed.",
  "dependencies": {
    "@anthropic-ai/sdk": "^0.60.0",
    "@frost-beta/clip": "^1.3.1",
    "axios": "^1.6.2",
    "chalk": "^5.3.0",
    "chokidar": "^3.5.3",
    "commander": "^11.1.0",
    "crawlee": "^3.14.1",
    "dotenv": "^16.3.1",
    "execa": "^9.6.0",
    "inquirer": "^9.2.12",
    "nanoid": "^5.0.4",
    "ora": "^7.0.1",
    "web-tree-sitter": "^0.25.8",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@commitlint/cli": "19.8.1",
    "@commitlint/config-conventional": "19.8.1",
    "@eslint/js": "^9.34.0",
    "@playwright/test": "1.54.2",
    "@testing-library/react": "^14.3.1",
    "@types/inquirer": "^9.0.7",
    "@types/node": "^20.9.0",
    "@typescript-eslint/eslint-plugin": "^8.40.0",
    "@typescript-eslint/parser": "^8.40.0",
    "@vitest/coverage-v8": "^3.2.4",
    "axe-core": "^4.9.1",
    "cross-env": "^7.0.3",
    "eslint": "^8.53.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-import-resolver-typescript": "^3.6.3",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-n": "^16.3.1",
    "eslint-plugin-prettier": "^5.5.4",
    "eslint-plugin-promise": "^6.1.1",
    "fast-check": "4.2.0",
    "fast-glob": "^3.3.3",
    "glob": "^10.4.2",
    "globals": "^15.15.0",
    "globby": "^14.0.0",
    "husky": "^8.0.3",
    "jest-axe": "^10.0.0",
    "js-yaml": "^4.1.0",
    "jsdom": "^24.1.0",
    "lint-staged": "^15.1.0",
    "madge": "8.0.0",
    "micromatch": "^4.0.8",
    "playwright": "^1.55.0",
    "prettier": "^3.0.3",
    "spdx-expression-parse": "^4.0.0",
    "tree-sitter-cli": "^0.25.8",
    "tree-sitter-go": "^0.23.4",
    "tree-sitter-javascript": "^0.23.1",
    "tree-sitter-python": "^0.23.6",
    "tree-sitter-typescript": "^0.23.2",
    "tsx": "^4.20.4",
    "turbo": "^1.10.16",
    "typescript": "^5.2.2",
    "typescript-eslint": "^8.41.0",
    "vite": "^4.5.0",
    "vitest": "^1.6.0"
  },
  "engines": {
    "node": ">=18.0.0"
  },
  "lint-staged": {
    "{apps,packages}/**/*.{ts,tsx,js,jsx}": [
      "prettier --write",
      "eslint --fix"
    ],
    "*.{md,json,yml}": [
      "prettier --write"
    ]
  },
  "pnpm": {
    "peerDependencyRules": {
      "ignoreMissing": [
        "rollup",
        "postcss",
        "react",
        "react-dom"
      ]
    },
    "overrides": {
      "@types/node": "^20.9.0",
      "semver": "^7.5.4",
      "vite": "6.3.5",
      "@vitest/ui": "3.2.4",
      "@vitest/coverage-v8": "3.2.4",
      "@playwright/test": "1.54.2"
    }
  }
}
